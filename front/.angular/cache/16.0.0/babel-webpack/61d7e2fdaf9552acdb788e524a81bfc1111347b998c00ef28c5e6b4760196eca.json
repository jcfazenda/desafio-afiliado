{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProjectService {\n  /**\n   * Constructor\n   */\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this._data = new BehaviorSubject(null);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for data\n   */\n  get data$() {\n    return this._data.asObservable();\n  }\n  /**\n   * Get data\n   */\n  getData() {\n    return this._httpClient.get('api/dashboards/project').pipe(tap(response => {\n      this._data.next(response);\n    }));\n  }\n}\nProjectService.ɵfac = function ProjectService_Factory(t) {\n  return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n};\nProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjectService,\n  factory: ProjectService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProjectService };","map":{"version":3,"names":["BehaviorSubject","tap","ProjectService","constructor","_httpClient","_data","data$","asObservable","getData","get","pipe","response","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\modules\\admin\\dashboards\\project\\project.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProjectService\r\n{\r\n    private _data: BehaviorSubject<any> = new BehaviorSubject(null); \r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _httpClient: HttpClient)\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for data\r\n     */\r\n    get data$(): Observable<any>\r\n    {\r\n        return this._data.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Get data\r\n     */\r\n    getData(): Observable<any>\r\n    {\r\n        return this._httpClient.get('api/dashboards/project').pipe(\r\n            tap((response: any) => {\r\n                this._data.next(response);\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;AAEvD,MAGaC,cAAc;EAIvB;;;EAGAC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IALvB,KAAAC,KAAK,GAAyB,IAAIL,eAAe,CAAC,IAAI,CAAC;EAO/D;EAEA;EACA;EACA;EAEA;;;EAGA,IAAIM,KAAKA,CAAA;IAEL,OAAO,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;EACpC;EAEA;;;EAGAC,OAAOA,CAAA;IAEH,OAAO,IAAI,CAACJ,WAAW,CAACK,GAAG,CAAC,wBAAwB,CAAC,CAACC,IAAI,CACtDT,GAAG,CAAEU,QAAa,IAAI;MAClB,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,QAAQ,CAAC;IAC7B,CAAC,CAAC,CACL;EACL;;AAjCST,cAAc,C;mBAAdA,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdd,cAAc,C;SAAdA,cAAc;EAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAETjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}