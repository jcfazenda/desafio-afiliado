{"ast":null,"code":"import { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/layout/common/messages/messages.service\";\nimport * as i2 from \"@angular/cdk/overlay\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/tooltip\";\nimport * as i7 from \"@angular/common\";\nconst _c0 = [\"messagesOrigin\"];\nconst _c1 = [\"messagesPanel\"];\nfunction MessagesComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 5)(2, \"span\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.unreadCount, \" \");\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 23);\n    i0.ɵɵtemplate(2, MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    const _r9 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", message_r6.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 25);\n    i0.ɵɵtemplate(2, MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    const _r9 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", message_r6.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵtemplate(2, MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !message_r6.useRouter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.useRouter);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵtemplate(2, MessagesComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r9 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r9);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelement(2, \"mat-icon\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", message_r6.icon);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", message_r6.image, i0.ɵɵsanitizeUrl)(\"alt\", \"Message image\");\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", message_r6.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 33);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", message_r6.description, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_11_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template, 3, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(1, MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵtemplate(3, MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵtemplate(4, MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementStart(5, \"div\", 28);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", message_r6.icon && !message_r6.image);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.image);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, message_r6.time, \"MMM dd, h:mm a\"), \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"unread\": a0\n  };\n};\nconst _c3 = function (a0, a1) {\n  return {\n    \"bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100\": a0,\n    \"bg-primary\": a1\n  };\n};\nfunction MessagesComponent_ng_template_4_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtemplate(2, MessagesComponent_ng_template_4_ng_container_11_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵtemplate(3, MessagesComponent_ng_template_4_ng_container_11_ng_container_3_Template, 3, 1, \"ng-container\", 2);\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_4_ng_container_11_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const message_r6 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.toggleRead(message_r6));\n    });\n    i0.ɵɵelement(6, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_4_ng_container_11_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const message_r6 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.delete(message_r6));\n    });\n    i0.ɵɵelement(8, \"mat-icon\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, MessagesComponent_ng_template_4_ng_container_11_ng_template_9_Template, 8, 8, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, !message_r6.read));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !message_r6.link);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matTooltip\", message_r6.read ? \"Mark as unread\" : \"Mark as read\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c3, message_r6.read, !message_r6.read));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", \"Remove\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x\");\n  }\n}\nfunction MessagesComponent_ng_template_4_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 34)(2, \"div\", 35);\n    i0.ɵɵelement(3, \"mat-icon\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37);\n    i0.ɵɵtext(5, \"No messages\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵtext(7, \"When you have messages, they will appear here.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:inbox\");\n  }\n}\nfunction MessagesComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9)(3, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.closePanel());\n    });\n    i0.ɵɵelement(4, \"mat-icon\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11);\n    i0.ɵɵtext(6, \"Mensagens\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12)(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function MessagesComponent_ng_template_4_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.markAllAsRead());\n    });\n    i0.ɵɵelement(9, \"mat-icon\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 14);\n    i0.ɵɵtemplate(11, MessagesComponent_ng_template_4_ng_container_11_Template, 11, 12, \"ng-container\", 15);\n    i0.ɵɵtemplate(12, MessagesComponent_ng_template_4_ng_container_12_Template, 8, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.unreadCount === 0)(\"matTooltip\", \"Mark all as read\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:mail-open\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.messages)(\"ngForTrackBy\", ctx_r3.trackByFn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.messages || !ctx_r3.messages.length);\n  }\n}\nclass MessagesComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _messagesService, _overlay, _viewContainerRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._messagesService = _messagesService;\n    this._overlay = _overlay;\n    this._viewContainerRef = _viewContainerRef;\n    this.unreadCount = 0;\n    this._unsubscribeAll = new Subject();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Subscribe to message changes\n    this._messagesService.messages$.pipe(takeUntil(this._unsubscribeAll)).subscribe(messages => {\n      // Load the messages\n      this.messages = messages;\n      // Calculate the unread count\n      this._calculateUnreadCount();\n      // Mark for check\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n    // Dispose the overlay\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Open the messages panel\n   */\n  openPanel() {\n    // Return if the messages panel or its origin is not defined\n    if (!this._messagesPanel || !this._messagesOrigin) {\n      return;\n    }\n    // Create the overlay if it doesn't exist\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n    // Attach the portal to the overlay\n    this._overlayRef.attach(new TemplatePortal(this._messagesPanel, this._viewContainerRef));\n  }\n  /**\n   * Close the messages panel\n   */\n  closePanel() {\n    this._overlayRef.detach();\n  }\n  /**\n   * Mark all messages as read\n   */\n  markAllAsRead() {\n    // Mark all as read\n    this._messagesService.markAllAsRead().subscribe();\n  }\n  /**\n   * Toggle read status of the given message\n   */\n  toggleRead(message) {\n    // Toggle the read status\n    message.read = !message.read;\n    // Update the message\n    this._messagesService.update(message.id, message).subscribe();\n  }\n  /**\n   * Delete the given message\n   */\n  delete(message) {\n    // Delete the message\n    this._messagesService.delete(message.id).subscribe();\n  }\n  /**\n   * Track by function for ngFor loops\n   *\n   * @param index\n   * @param item\n   */\n  trackByFn(index, item) {\n    return item.id || index;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Create the overlay\n   */\n  _createOverlay() {\n    // Create the overlay\n    this._overlayRef = this._overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'fuse-backdrop-on-mobile',\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._messagesOrigin._elementRef.nativeElement).withLockedPosition(true).withPush(true).withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n      }])\n    });\n    // Detach the overlay from the portal on backdrop click\n    this._overlayRef.backdropClick().subscribe(() => {\n      this._overlayRef.detach();\n    });\n  }\n  /**\n   * Calculate the unread count\n   *\n   * @private\n   */\n  _calculateUnreadCount() {\n    let count = 0;\n    if (this.messages && this.messages.length) {\n      count = this.messages.filter(message => !message.read).length;\n    }\n    this.unreadCount = count;\n  }\n  static #_ = this.ɵfac = function MessagesComponent_Factory(t) {\n    return new (t || MessagesComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.MessagesService), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessagesComponent,\n    selectors: [[\"messages\"]],\n    viewQuery: function MessagesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._messagesOrigin = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._messagesPanel = _t.first);\n      }\n    },\n    exportAs: [\"messages\"],\n    decls: 6,\n    vars: 2,\n    consts: [[\"mat-icon-button\", \"\", 3, \"click\"], [\"messagesOrigin\", \"\"], [4, \"ngIf\"], [3, \"svgIcon\"], [\"messagesPanel\", \"\"], [1, \"absolute\", \"top-0\", \"right-0\", \"left-0\", \"flex\", \"items-center\", \"justify-center\", \"h-3\"], [1, \"flex\", \"items-center\", \"justify-center\", \"shrink-0\", \"min-w-4\", \"h-4\", \"px-1\", \"ml-4\", \"mt-2.5\", \"rounded-full\", \"bg-indigo-600\", \"text-indigo-50\", \"text-xs\", \"font-medium\"], [1, \"fixed\", \"inset-0\", \"sm:static\", \"sm:inset-auto\", \"flex\", \"flex-col\", \"sm:min-w-90\", \"sm:w-90\", \"sm:rounded-2xl\", \"overflow-hidden\", \"shadow-lg\"], [1, \"flex\", \"shrink-0\", \"items-center\", \"py-4\", \"pr-4\", \"pl-6\", \"bg-primary\", \"text-on-primary\"], [1, \"sm:hidden\", \"-ml-1\", \"mr-3\"], [1, \"icon-size-5\", \"text-current\", 3, \"svgIcon\"], [1, \"text-lg\", \"font-medium\", \"leading-10\"], [1, \"ml-auto\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"matTooltip\", \"click\"], [1, \"relative\", \"flex\", \"flex-col\", \"flex-auto\", \"sm:max-h-120\", \"divide-y\", \"overflow-y-auto\", \"bg-card\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"flex\", \"group\", \"hover:bg-gray-50\", \"dark:hover:bg-black\", \"dark:hover:bg-opacity-5\", 3, \"ngClass\"], [1, \"relative\", \"flex\", \"flex-col\", \"my-5\", \"mr-6\", \"ml-2\"], [\"mat-icon-button\", \"\", 1, \"w-6\", \"h-6\", \"min-h-6\", 3, \"matTooltip\", \"click\"], [1, \"w-2\", \"h-2\", \"rounded-full\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", 1, \"w-6\", \"h-6\", \"min-h-6\", \"sm:opacity-0\", \"sm:group-hover:opacity-100\", 3, \"matTooltip\", \"click\"], [1, \"icon-size-4\", 3, \"svgIcon\"], [\"messageContent\", \"\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\", \"cursor-pointer\", 3, \"href\"], [4, \"ngTemplateOutlet\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\", \"cursor-pointer\", 3, \"routerLink\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\"], [1, \"flex\", \"flex-col\", \"flex-auto\"], [1, \"mt-2\", \"text-sm\", \"leading-none\", \"text-secondary\"], [1, \"flex\", \"shrink-0\", \"items-center\", \"justify-center\", \"w-8\", \"h-8\", \"mr-4\", \"rounded-full\", \"bg-gray-100\", \"dark:bg-gray-700\"], [1, \"icon-size-5\", 3, \"svgIcon\"], [1, \"shrink-0\", \"w-8\", \"h-8\", \"mr-4\", \"rounded-full\", \"overflow-hidden\", \"object-cover\", \"object-center\", 3, \"src\", \"alt\"], [1, \"font-semibold\", \"line-clamp-1\", 3, \"innerHTML\"], [1, \"line-clamp-2\", 3, \"innerHTML\"], [1, \"flex\", \"flex-col\", \"flex-auto\", \"items-center\", \"justify-center\", \"sm:justify-start\", \"py-12\", \"px-8\"], [1, \"flex\", \"flex-0\", \"items-center\", \"justify-center\", \"w-14\", \"h-14\", \"rounded-full\", \"bg-primary-100\", \"dark:bg-primary-600\"], [1, \"text-primary-700\", \"dark:text-primary-50\", 3, \"svgIcon\"], [1, \"mt-5\", \"text-2xl\", \"font-semibold\", \"tracking-tight\"], [1, \"w-full\", \"max-w-60\", \"mt-1\", \"text-md\", \"text-center\", \"text-secondary\"]],\n    template: function MessagesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click\", function MessagesComponent_Template_button_click_0_listener() {\n          return ctx.openPanel();\n        });\n        i0.ɵɵtemplate(2, MessagesComponent_ng_container_2_Template, 4, 1, \"ng-container\", 2);\n        i0.ɵɵelement(3, \"mat-icon\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MessagesComponent_ng_template_4_Template, 13, 7, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.unreadCount > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:inbox\");\n      }\n    },\n    dependencies: [i3.RouterLink, i4.MatIconButton, i5.MatIcon, i6.MatTooltip, i7.NgClass, i7.NgForOf, i7.NgIf, i7.NgTemplateOutlet, i7.DatePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\nexport { MessagesComponent };","map":{"version":3,"names":["TemplatePortal","Subject","takeUntil","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","unreadCount","ɵɵelementContainer","ɵɵtemplate","MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template","ɵɵproperty","message_r6","link","ɵɵsanitizeUrl","_r9","MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template","MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template","MessagesComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template","useRouter","MessagesComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template","ɵɵelement","icon","image","title","ɵɵsanitizeHtml","description","MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template","MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template","MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template","MessagesComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template","ɵɵpipeBind2","time","MessagesComponent_ng_template_4_ng_container_11_ng_container_2_Template","MessagesComponent_ng_template_4_ng_container_11_ng_container_3_Template","ɵɵlistener","MessagesComponent_ng_template_4_ng_container_11_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r29","$implicit","ctx_r28","ɵɵnextContext","ɵɵresetView","toggleRead","MessagesComponent_ng_template_4_ng_container_11_Template_button_click_7_listener","ctx_r30","delete","MessagesComponent_ng_template_4_ng_container_11_ng_template_9_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction1","_c2","read","ɵɵpureFunction2","_c3","MessagesComponent_ng_template_4_Template_button_click_3_listener","_r32","ctx_r31","closePanel","MessagesComponent_ng_template_4_Template_button_click_8_listener","ctx_r33","markAllAsRead","MessagesComponent_ng_template_4_ng_container_11_Template","MessagesComponent_ng_template_4_ng_container_12_Template","ctx_r3","messages","trackByFn","length","MessagesComponent","constructor","_changeDetectorRef","_messagesService","_overlay","_viewContainerRef","_unsubscribeAll","ngOnInit","messages$","pipe","subscribe","_calculateUnreadCount","markForCheck","ngOnDestroy","next","complete","_overlayRef","dispose","openPanel","_messagesPanel","_messagesOrigin","_createOverlay","attach","detach","message","update","id","index","item","create","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","block","positionStrategy","position","flexibleConnectedTo","_elementRef","nativeElement","withLockedPosition","withPush","withPositions","originX","originY","overlayX","overlayY","backdropClick","count","filter","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","MessagesService","i2","Overlay","ViewContainerRef","_2","selectors","viewQuery","MessagesComponent_Query","rf","ctx","MessagesComponent_Template_button_click_0_listener","MessagesComponent_ng_container_2_Template","MessagesComponent_ng_template_4_Template"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\layout\\common\\messages\\messages.component.ts","C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\layout\\common\\messages\\messages.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { Message } from 'app/layout/common/messages/messages.types';\r\nimport { MessagesService } from 'app/layout/common/messages/messages.service';\r\n\r\n@Component({\r\n    selector       : 'messages',\r\n    templateUrl    : './messages.component.html',\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    exportAs       : 'messages'\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy\r\n{\r\n    @ViewChild('messagesOrigin') private _messagesOrigin: MatButton;\r\n    @ViewChild('messagesPanel') private _messagesPanel: TemplateRef<any>;\r\n\r\n    messages: Message[];\r\n    unreadCount: number = 0;\r\n    private _overlayRef: OverlayRef;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _messagesService: MessagesService,\r\n        private _overlay: Overlay,\r\n        private _viewContainerRef: ViewContainerRef\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to message changes\r\n        this._messagesService.messages$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((messages: Message[]) => {\r\n\r\n                // Load the messages\r\n                this.messages = messages;\r\n\r\n                // Calculate the unread count\r\n                this._calculateUnreadCount();\r\n\r\n                // Mark for check\r\n                this._changeDetectorRef.markForCheck();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n\r\n        // Dispose the overlay\r\n        if ( this._overlayRef )\r\n        {\r\n            this._overlayRef.dispose();\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the messages panel\r\n     */\r\n    openPanel(): void\r\n    {\r\n        // Return if the messages panel or its origin is not defined\r\n        if ( !this._messagesPanel || !this._messagesOrigin )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the overlay if it doesn't exist\r\n        if ( !this._overlayRef )\r\n        {\r\n            this._createOverlay();\r\n        }\r\n\r\n        // Attach the portal to the overlay\r\n        this._overlayRef.attach(new TemplatePortal(this._messagesPanel, this._viewContainerRef));\r\n    }\r\n\r\n    /**\r\n     * Close the messages panel\r\n     */\r\n    closePanel(): void\r\n    {\r\n        this._overlayRef.detach();\r\n    }\r\n\r\n    /**\r\n     * Mark all messages as read\r\n     */\r\n    markAllAsRead(): void\r\n    {\r\n        // Mark all as read\r\n        this._messagesService.markAllAsRead().subscribe();\r\n    }\r\n\r\n    /**\r\n     * Toggle read status of the given message\r\n     */\r\n    toggleRead(message: Message): void\r\n    {\r\n        // Toggle the read status\r\n        message.read = !message.read;\r\n\r\n        // Update the message\r\n        this._messagesService.update(message.id, message).subscribe();\r\n    }\r\n\r\n    /**\r\n     * Delete the given message\r\n     */\r\n    delete(message: Message): void\r\n    {\r\n        // Delete the message\r\n        this._messagesService.delete(message.id).subscribe();\r\n    }\r\n\r\n    /**\r\n     * Track by function for ngFor loops\r\n     *\r\n     * @param index\r\n     * @param item\r\n     */\r\n    trackByFn(index: number, item: any): any\r\n    {\r\n        return item.id || index;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Create the overlay\r\n     */\r\n    private _createOverlay(): void\r\n    {\r\n        // Create the overlay\r\n        this._overlayRef = this._overlay.create({\r\n            hasBackdrop     : true,\r\n            backdropClass   : 'fuse-backdrop-on-mobile',\r\n            scrollStrategy  : this._overlay.scrollStrategies.block(),\r\n            positionStrategy: this._overlay.position()\r\n                                  .flexibleConnectedTo(this._messagesOrigin._elementRef.nativeElement)\r\n                                  .withLockedPosition(true)\r\n                                  .withPush(true)\r\n                                  .withPositions([\r\n                                      {\r\n                                          originX : 'start',\r\n                                          originY : 'bottom',\r\n                                          overlayX: 'start',\r\n                                          overlayY: 'top'\r\n                                      },\r\n                                      {\r\n                                          originX : 'start',\r\n                                          originY : 'top',\r\n                                          overlayX: 'start',\r\n                                          overlayY: 'bottom'\r\n                                      },\r\n                                      {\r\n                                          originX : 'end',\r\n                                          originY : 'bottom',\r\n                                          overlayX: 'end',\r\n                                          overlayY: 'top'\r\n                                      },\r\n                                      {\r\n                                          originX : 'end',\r\n                                          originY : 'top',\r\n                                          overlayX: 'end',\r\n                                          overlayY: 'bottom'\r\n                                      }\r\n                                  ])\r\n        });\r\n\r\n        // Detach the overlay from the portal on backdrop click\r\n        this._overlayRef.backdropClick().subscribe(() => {\r\n            this._overlayRef.detach();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate the unread count\r\n     *\r\n     * @private\r\n     */\r\n    private _calculateUnreadCount(): void\r\n    {\r\n        let count = 0;\r\n\r\n        if ( this.messages && this.messages.length )\r\n        {\r\n            count = this.messages.filter(message => !message.read).length;\r\n        }\r\n\r\n        this.unreadCount = count;\r\n    }\r\n}\r\n","<!-- Messages toggle -->\r\n<button\r\n    mat-icon-button\r\n    (click)=\"openPanel()\"\r\n    #messagesOrigin>\r\n    <ng-container *ngIf=\"unreadCount > 0\">\r\n        <span class=\"absolute top-0 right-0 left-0 flex items-center justify-center h-3\">\r\n            <span class=\"flex items-center justify-center shrink-0 min-w-4 h-4 px-1 ml-4 mt-2.5 rounded-full bg-indigo-600 text-indigo-50 text-xs font-medium\">\r\n                {{unreadCount}}\r\n            </span>\r\n        </span>\r\n    </ng-container>\r\n    <mat-icon [svgIcon]=\"'heroicons_outline:inbox'\"></mat-icon>\r\n</button>\r\n\r\n<!-- Messages panel -->\r\n<ng-template #messagesPanel>\r\n\r\n    <div class=\"fixed inset-0 sm:static sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-hidden shadow-lg\">\r\n\r\n        <!-- Header -->\r\n        <div class=\"flex shrink-0 items-center py-4 pr-4 pl-6 bg-primary text-on-primary\">\r\n            <div class=\"sm:hidden -ml-1 mr-3\">\r\n                <button\r\n                    mat-icon-button\r\n                    (click)=\"closePanel()\">\r\n                    <mat-icon\r\n                        class=\"icon-size-5 text-current\"\r\n                        [svgIcon]=\"'heroicons_solid:x'\"></mat-icon>\r\n                </button>\r\n            </div>\r\n            <div class=\"text-lg font-medium leading-10\">Mensagens</div>\r\n            <div class=\"ml-auto\">\r\n                <button\r\n                    mat-icon-button\r\n                    [disabled]=\"unreadCount === 0\"\r\n                    [matTooltip]=\"'Mark all as read'\"\r\n                    (click)=\"markAllAsRead()\">\r\n                    <mat-icon\r\n                        class=\"icon-size-5 text-current\"\r\n                        [svgIcon]=\"'heroicons_solid:mail-open'\"></mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Content -->\r\n        <div class=\"relative flex flex-col flex-auto sm:max-h-120 divide-y overflow-y-auto bg-card\">\r\n            <!-- Messages -->\r\n            <ng-container *ngFor=\"let message of messages; trackBy: trackByFn\">\r\n                <div\r\n                    class=\"flex group hover:bg-gray-50 dark:hover:bg-black dark:hover:bg-opacity-5\"\r\n                    [ngClass]=\"{'unread': !message.read}\">\r\n\r\n                    <!-- Message with a link -->\r\n                    <ng-container *ngIf=\"message.link\">\r\n                        <!-- Normal links -->\r\n                        <ng-container *ngIf=\"!message.useRouter\">\r\n                            <a\r\n                                class=\"flex flex-auto py-5 pl-6 cursor-pointer\"\r\n                                [href]=\"message.link\">\r\n                                <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\r\n                            </a>\r\n                        </ng-container>\r\n                        <!-- Router links -->\r\n                        <ng-container *ngIf=\"message.useRouter\">\r\n                            <a\r\n                                class=\"flex flex-auto py-5 pl-6 cursor-pointer\"\r\n                                [routerLink]=\"message.link\">\r\n                                <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\r\n                            </a>\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                    <!-- Message without a link -->\r\n                    <ng-container *ngIf=\"!message.link\">\r\n                        <div class=\"flex flex-auto py-5 pl-6\">\r\n                            <ng-container *ngTemplateOutlet=\"messageContent\"></ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <!-- Actions -->\r\n                    <div class=\"relative flex flex-col my-5 mr-6 ml-2\">\r\n                        <!-- Indicator -->\r\n                        <button\r\n                            class=\"w-6 h-6 min-h-6\"\r\n                            mat-icon-button\r\n                            (click)=\"toggleRead(message)\"\r\n                            [matTooltip]=\"message.read ? 'Mark as unread' : 'Mark as read'\">\r\n                            <span\r\n                                class=\"w-2 h-2 rounded-full\"\r\n                                [ngClass]=\"{'bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100': message.read,\r\n                                            'bg-primary': !message.read}\"></span>\r\n                        </button>\r\n                        <!-- Remove -->\r\n                        <button\r\n                            class=\"w-6 h-6 min-h-6 sm:opacity-0 sm:group-hover:opacity-100\"\r\n                            mat-icon-button\r\n                            (click)=\"delete(message)\"\r\n                            [matTooltip]=\"'Remove'\">\r\n                            <mat-icon\r\n                                class=\"icon-size-4\"\r\n                                [svgIcon]=\"'heroicons_solid:x'\"></mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Message content template -->\r\n                <ng-template #messageContent>\r\n                    <!-- Icon -->\r\n                    <ng-container *ngIf=\"message.icon && !message.image\">\r\n                        <div class=\"flex shrink-0 items-center justify-center w-8 h-8 mr-4 rounded-full bg-gray-100 dark:bg-gray-700\">\r\n                            <mat-icon\r\n                                class=\"icon-size-5\"\r\n                                [svgIcon]=\"message.icon\">\r\n                            </mat-icon>\r\n                        </div>\r\n                    </ng-container>\r\n                    <!-- Image -->\r\n                    <ng-container *ngIf=\"message.image\">\r\n                        <img\r\n                            class=\"shrink-0 w-8 h-8 mr-4 rounded-full overflow-hidden object-cover object-center\"\r\n                            [src]=\"message.image\"\r\n                            [alt]=\"'Message image'\">\r\n                    </ng-container>\r\n                    <!-- Title, description & time -->\r\n                    <div class=\"flex flex-col flex-auto\">\r\n                        <ng-container *ngIf=\"message.title\">\r\n                            <div\r\n                                class=\"font-semibold line-clamp-1\"\r\n                                [innerHTML]=\"message.title\"></div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"message.description\">\r\n                            <div\r\n                                class=\"line-clamp-2\"\r\n                                [innerHTML]=\"message.description\"></div>\r\n                        </ng-container>\r\n                        <div class=\"mt-2 text-sm leading-none text-secondary\">\r\n                            {{message.time | date:'MMM dd, h:mm a'}}\r\n                        </div>\r\n                    </div>\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n            <!-- No messages -->\r\n            <ng-container *ngIf=\"!messages || !messages.length\">\r\n                <div class=\"flex flex-col flex-auto items-center justify-center sm:justify-start py-12 px-8\">\r\n                    <div class=\"flex flex-0 items-center justify-center w-14 h-14 rounded-full bg-primary-100 dark:bg-primary-600\">\r\n                        <mat-icon\r\n                            class=\"text-primary-700 dark:text-primary-50\"\r\n                            [svgIcon]=\"'heroicons_outline:inbox'\"></mat-icon>\r\n                    </div>\r\n                    <div class=\"mt-5 text-2xl font-semibold tracking-tight\">No messages</div>\r\n                    <div class=\"w-full max-w-60 mt-1 text-md text-center text-secondary\">When you have messages, they will appear here.</div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}