{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { NavigationEnd } from '@angular/router';\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\nimport { FUSE_VERSION } from '@fuse/version';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@fuse/services/config\";\nimport * as i3 from \"@fuse/services/media-watcher\";\nimport * as i4 from \"@fuse/services/platform\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"app/layout/layouts/empty/empty.component\";\nimport * as i7 from \"app/layout/layouts/horizontal/centered/centered.component\";\nimport * as i8 from \"app/layout/layouts/horizontal/enterprise/enterprise.component\";\nimport * as i9 from \"app/layout/layouts/horizontal/material/material.component\";\nimport * as i10 from \"app/layout/layouts/horizontal/modern/modern.component\";\nimport * as i11 from \"app/layout/layouts/vertical/classic/classic.component\";\nimport * as i12 from \"app/layout/layouts/vertical/classy/classy.component\";\nimport * as i13 from \"app/layout/layouts/vertical/compact/compact.component\";\nimport * as i14 from \"app/layout/layouts/vertical/dense/dense.component\";\nimport * as i15 from \"app/layout/layouts/vertical/futuristic/futuristic.component\";\nimport * as i16 from \"app/layout/layouts/vertical/thin/thin.component\";\nfunction LayoutComponent_empty_layout_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"empty-layout\");\n  }\n}\nfunction LayoutComponent_centered_layout_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"centered-layout\");\n  }\n}\nfunction LayoutComponent_enterprise_layout_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"enterprise-layout\");\n  }\n}\nfunction LayoutComponent_material_layout_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"material-layout\");\n  }\n}\nfunction LayoutComponent_modern_layout_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"modern-layout\");\n  }\n}\nfunction LayoutComponent_classic_layout_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"classic-layout\");\n  }\n}\nfunction LayoutComponent_classy_layout_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"classy-layout\");\n  }\n}\nfunction LayoutComponent_compact_layout_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"compact-layout\");\n  }\n}\nfunction LayoutComponent_dense_layout_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"dense-layout\");\n  }\n}\nfunction LayoutComponent_futuristic_layout_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"futuristic-layout\");\n  }\n}\nfunction LayoutComponent_thin_layout_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"thin-layout\");\n  }\n}\nclass LayoutComponent {\n  /**\n   * Constructor\n   */\n  constructor(_activatedRoute, _document, _renderer2, _router, _fuseConfigService, _fuseMediaWatcherService, _fusePlatformService) {\n    this._activatedRoute = _activatedRoute;\n    this._document = _document;\n    this._renderer2 = _renderer2;\n    this._router = _router;\n    this._fuseConfigService = _fuseConfigService;\n    this._fuseMediaWatcherService = _fuseMediaWatcherService;\n    this._fusePlatformService = _fusePlatformService;\n    this._unsubscribeAll = new Subject();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Set the theme and scheme based on the configuration\n    combineLatest([this._fuseConfigService.config$, this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)'])]).pipe(takeUntil(this._unsubscribeAll), map(([config, mql]) => {\n      const options = {\n        scheme: config.scheme,\n        theme: config.theme\n      };\n      // If the scheme is set to 'auto'...\n      if (config.scheme === 'auto') {\n        // Decide the scheme using the media query\n        options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\n      }\n      return options;\n    })).subscribe(options => {\n      // Store the options\n      this.scheme = options.scheme;\n      this.theme = options.theme;\n      // Update the scheme and theme\n      this._updateScheme();\n      this._updateTheme();\n    });\n    // Subscribe to config changes\n    this._fuseConfigService.config$.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      // Store the config\n      this.config = config;\n      // Update the layout\n      this._updateLayout();\n    });\n    // Subscribe to NavigationEnd event\n    this._router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(() => {\n      // Update the layout\n      this._updateLayout();\n    });\n    // Set the app version\n    this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\n    // Set the OS name\n    this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Update the selected layout\n   */\n  _updateLayout() {\n    // Get the current activated route\n    let route = this._activatedRoute;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    // 1. Set the layout from the config\n    this.layout = this.config.layout;\n    // 2. Get the query parameter from the current route and\n    // set the layout and save the layout to the config\n    const layoutFromQueryParam = route.snapshot.queryParamMap.get('layout');\n    if (layoutFromQueryParam) {\n      this.layout = layoutFromQueryParam;\n      if (this.config) {\n        this.config.layout = layoutFromQueryParam;\n      }\n    }\n    // 3. Iterate through the paths and change the layout as we find\n    // a config for it.\n    //\n    // The reason we do this is that there might be empty grouping\n    // paths or componentless routes along the path. Because of that,\n    // we cannot just assume that the layout configuration will be\n    // in the last path's config or in the first path's config.\n    //\n    // So, we get all the paths that matched starting from root all\n    // the way to the current activated route, walk through them one\n    // by one and change the layout as we find the layout config. This\n    // way, layout configuration can live anywhere within the path and\n    // we won't miss it.\n    //\n    // Also, this will allow overriding the layout in any time so we\n    // can have different layouts for different routes.\n    const paths = route.pathFromRoot;\n    paths.forEach(path => {\n      // Check if there is a 'layout' data\n      if (path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout) {\n        // Set the layout\n        this.layout = path.routeConfig.data.layout;\n      }\n    });\n  }\n  /**\n   * Update the selected scheme\n   *\n   * @private\n   */\n  _updateScheme() {\n    // Remove class names for all schemes\n    this._document.body.classList.remove('light', 'dark');\n    // Add class name for the currently selected scheme\n    this._document.body.classList.add(this.scheme);\n  }\n  /**\n   * Update the selected theme\n   *\n   * @private\n   */\n  _updateTheme() {\n    // Find the class name for the previously selected theme and remove it\n    this._document.body.classList.forEach(className => {\n      if (className.startsWith('theme-')) {\n        this._document.body.classList.remove(className, className.split('-')[1]);\n      }\n    });\n    // Add class name for the currently selected theme\n    this._document.body.classList.add(this.theme);\n  }\n}\nLayoutComponent.ɵfac = function LayoutComponent_Factory(t) {\n  return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FuseConfigService), i0.ɵɵdirectiveInject(i3.FuseMediaWatcherService), i0.ɵɵdirectiveInject(i4.FusePlatformService));\n};\nLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LayoutComponent,\n  selectors: [[\"layout\"]],\n  decls: 11,\n  vars: 11,\n  consts: [[4, \"ngIf\"]],\n  template: function LayoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LayoutComponent_empty_layout_0_Template, 1, 0, \"empty-layout\", 0);\n      i0.ɵɵtemplate(1, LayoutComponent_centered_layout_1_Template, 1, 0, \"centered-layout\", 0);\n      i0.ɵɵtemplate(2, LayoutComponent_enterprise_layout_2_Template, 1, 0, \"enterprise-layout\", 0);\n      i0.ɵɵtemplate(3, LayoutComponent_material_layout_3_Template, 1, 0, \"material-layout\", 0);\n      i0.ɵɵtemplate(4, LayoutComponent_modern_layout_4_Template, 1, 0, \"modern-layout\", 0);\n      i0.ɵɵtemplate(5, LayoutComponent_classic_layout_5_Template, 1, 0, \"classic-layout\", 0);\n      i0.ɵɵtemplate(6, LayoutComponent_classy_layout_6_Template, 1, 0, \"classy-layout\", 0);\n      i0.ɵɵtemplate(7, LayoutComponent_compact_layout_7_Template, 1, 0, \"compact-layout\", 0);\n      i0.ɵɵtemplate(8, LayoutComponent_dense_layout_8_Template, 1, 0, \"dense-layout\", 0);\n      i0.ɵɵtemplate(9, LayoutComponent_futuristic_layout_9_Template, 1, 0, \"futuristic-layout\", 0);\n      i0.ɵɵtemplate(10, LayoutComponent_thin_layout_10_Template, 1, 0, \"thin-layout\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"empty\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"centered\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"enterprise\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"material\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"modern\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"classic\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"classy\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"compact\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"dense\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"futuristic\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.layout === \"thin\");\n    }\n  },\n  dependencies: [i5.NgIf, i6.EmptyLayoutComponent, i7.CenteredLayoutComponent, i8.EnterpriseLayoutComponent, i9.MaterialLayoutComponent, i10.ModernLayoutComponent, i11.ClassicLayoutComponent, i12.ClassyLayoutComponent, i13.CompactLayoutComponent, i14.DenseLayoutComponent, i15.FuturisticLayoutComponent, i16.ThinLayoutComponent],\n  styles: [\"layout {\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n  max-width: 100%;\\n  min-width: 0;\\n  /* Base styles for individual layouts */\\n  /* Base styles for components that load as a route */\\n}\\nlayout > * {\\n  position: relative;\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n}\\nlayout router-outlet + * {\\n  position: relative;\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uLyVDMyU4MXJlYSUyMGRlJTIwVHJhYmFsaG8vcHJvamVjdHMvcGF5bWVudHMvaXNvL3NyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBRUEsdUNBQUE7RUFRQSxvREFBQTtBQ1BKO0FEQUk7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQ0VSO0FESVE7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQ0ZaIiwic291cmNlc0NvbnRlbnQiOlsibGF5b3V0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4OiAxIDEgYXV0bztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgbWluLXdpZHRoOiAwO1xyXG5cclxuICAgIC8qIEJhc2Ugc3R5bGVzIGZvciBpbmRpdmlkdWFsIGxheW91dHMgKi9cclxuICAgID4gKiB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgLyogQmFzZSBzdHlsZXMgZm9yIGNvbXBvbmVudHMgdGhhdCBsb2FkIGFzIGEgcm91dGUgKi9cclxuICAgIHJvdXRlci1vdXRsZXQge1xyXG5cclxuICAgICAgICArICoge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXg6IDEgMSBhdXRvO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwibGF5b3V0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMSAxIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1pbi13aWR0aDogMDtcbiAgLyogQmFzZSBzdHlsZXMgZm9yIGluZGl2aWR1YWwgbGF5b3V0cyAqL1xuICAvKiBCYXNlIHN0eWxlcyBmb3IgY29tcG9uZW50cyB0aGF0IGxvYWQgYXMgYSByb3V0ZSAqL1xufVxubGF5b3V0ID4gKiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleDogMSAxIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xufVxubGF5b3V0IHJvdXRlci1vdXRsZXQgKyAqIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAxIDEgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  encapsulation: 2\n});\nexport { LayoutComponent };","map":{"version":3,"names":["DOCUMENT","NavigationEnd","combineLatest","filter","map","Subject","takeUntil","FUSE_VERSION","i0","ɵɵelement","LayoutComponent","constructor","_activatedRoute","_document","_renderer2","_router","_fuseConfigService","_fuseMediaWatcherService","_fusePlatformService","_unsubscribeAll","ngOnInit","config$","onMediaQueryChange$","pipe","config","mql","options","scheme","theme","breakpoints","subscribe","_updateScheme","_updateTheme","_updateLayout","events","event","setAttribute","querySelector","addClass","body","osName","ngOnDestroy","next","complete","route","firstChild","layout","layoutFromQueryParam","snapshot","queryParamMap","get","paths","pathFromRoot","forEach","path","routeConfig","data","classList","remove","add","className","startsWith","split","ɵɵdirectiveInject","i1","ActivatedRoute","Renderer2","Router","i2","FuseConfigService","i3","FuseMediaWatcherService","i4","FusePlatformService","selectors","decls","vars","consts","template","LayoutComponent_Template","rf","ctx","ɵɵtemplate","LayoutComponent_empty_layout_0_Template","LayoutComponent_centered_layout_1_Template","LayoutComponent_enterprise_layout_2_Template","LayoutComponent_material_layout_3_Template","LayoutComponent_modern_layout_4_Template","LayoutComponent_classic_layout_5_Template","LayoutComponent_classy_layout_6_Template","LayoutComponent_compact_layout_7_Template","LayoutComponent_dense_layout_8_Template","LayoutComponent_futuristic_layout_9_Template","LayoutComponent_thin_layout_10_Template","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\layout\\layout.component.ts","C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\layout\\layout.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\r\nimport { FuseConfigService } from '@fuse/services/config';\r\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\r\nimport { FusePlatformService } from '@fuse/services/platform';\r\nimport { FUSE_VERSION } from '@fuse/version';\r\nimport { Layout } from 'app/layout/layout.types';\r\nimport { AppConfig } from 'app/core/config/app.config';\r\n\r\n@Component({\r\n    selector     : 'layout',\r\n    templateUrl  : './layout.component.html',\r\n    styleUrls    : ['./layout.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LayoutComponent implements OnInit, OnDestroy\r\n{\r\n    config: AppConfig;\r\n    layout: Layout;\r\n    scheme: 'dark' | 'light';\r\n    theme: string;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _renderer2: Renderer2,\r\n        private _router: Router,\r\n        private _fuseConfigService: FuseConfigService,\r\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\r\n        private _fusePlatformService: FusePlatformService\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Set the theme and scheme based on the configuration\r\n        combineLatest([\r\n            this._fuseConfigService.config$,\r\n            this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)'])\r\n        ]).pipe(\r\n            takeUntil(this._unsubscribeAll),\r\n            map(([config, mql]) => {\r\n\r\n                const options = {\r\n                    scheme: config.scheme,\r\n                    theme : config.theme\r\n                };\r\n\r\n                // If the scheme is set to 'auto'...\r\n                if ( config.scheme === 'auto' )\r\n                {\r\n                    // Decide the scheme using the media query\r\n                    options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\r\n                }\r\n\r\n                return options;\r\n            })\r\n        ).subscribe((options) => {\r\n\r\n            // Store the options\r\n            this.scheme = options.scheme;\r\n            this.theme = options.theme;\r\n\r\n            // Update the scheme and theme\r\n            this._updateScheme();\r\n            this._updateTheme();\r\n        });\r\n\r\n        // Subscribe to config changes\r\n        this._fuseConfigService.config$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((config: AppConfig) => {\r\n\r\n                // Store the config\r\n                this.config = config;\r\n\r\n                // Update the layout\r\n                this._updateLayout();\r\n            });\r\n\r\n        // Subscribe to NavigationEnd event\r\n        this._router.events.pipe(\r\n            filter(event => event instanceof NavigationEnd),\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(() => {\r\n\r\n            // Update the layout\r\n            this._updateLayout();\r\n        });\r\n\r\n        // Set the app version\r\n        this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\r\n\r\n        // Set the OS name\r\n        this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Update the selected layout\r\n     */\r\n    private _updateLayout(): void\r\n    {\r\n        // Get the current activated route\r\n        let route = this._activatedRoute;\r\n        while ( route.firstChild )\r\n        {\r\n            route = route.firstChild;\r\n        }\r\n\r\n        // 1. Set the layout from the config\r\n        this.layout = this.config.layout;\r\n\r\n        // 2. Get the query parameter from the current route and\r\n        // set the layout and save the layout to the config\r\n        const layoutFromQueryParam = (route.snapshot.queryParamMap.get('layout') as Layout);\r\n        if ( layoutFromQueryParam )\r\n        {\r\n            this.layout = layoutFromQueryParam;\r\n            if ( this.config )\r\n            {\r\n                this.config.layout = layoutFromQueryParam;\r\n            }\r\n        }\r\n\r\n        // 3. Iterate through the paths and change the layout as we find\r\n        // a config for it.\r\n        //\r\n        // The reason we do this is that there might be empty grouping\r\n        // paths or componentless routes along the path. Because of that,\r\n        // we cannot just assume that the layout configuration will be\r\n        // in the last path's config or in the first path's config.\r\n        //\r\n        // So, we get all the paths that matched starting from root all\r\n        // the way to the current activated route, walk through them one\r\n        // by one and change the layout as we find the layout config. This\r\n        // way, layout configuration can live anywhere within the path and\r\n        // we won't miss it.\r\n        //\r\n        // Also, this will allow overriding the layout in any time so we\r\n        // can have different layouts for different routes.\r\n        const paths = route.pathFromRoot;\r\n        paths.forEach((path) => {\r\n\r\n            // Check if there is a 'layout' data\r\n            if ( path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout )\r\n            {\r\n                // Set the layout\r\n                this.layout = path.routeConfig.data.layout;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update the selected scheme\r\n     *\r\n     * @private\r\n     */\r\n    private _updateScheme(): void\r\n    {\r\n        // Remove class names for all schemes\r\n        this._document.body.classList.remove('light', 'dark');\r\n\r\n        // Add class name for the currently selected scheme\r\n        this._document.body.classList.add(this.scheme);\r\n    }\r\n\r\n    /**\r\n     * Update the selected theme\r\n     *\r\n     * @private\r\n     */\r\n    private _updateTheme(): void\r\n    {\r\n        // Find the class name for the previously selected theme and remove it\r\n        this._document.body.classList.forEach((className: string) => {\r\n            if ( className.startsWith('theme-') )\r\n            {\r\n                this._document.body.classList.remove(className, className.split('-')[1]);\r\n            }\r\n        });\r\n\r\n        // Add class name for the currently selected theme\r\n        this._document.body.classList.add(this.theme);\r\n    }\r\n}\r\n","<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Empty layout -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<empty-layout *ngIf=\"layout === 'empty'\"></empty-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Layouts with horizontal navigation -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n\r\n<!-- Centered -->\r\n<centered-layout *ngIf=\"layout === 'centered'\"></centered-layout>\r\n\r\n<!-- Enterprise -->\r\n<enterprise-layout *ngIf=\"layout === 'enterprise'\"></enterprise-layout>\r\n\r\n<!-- Material -->\r\n<material-layout *ngIf=\"layout === 'material'\"></material-layout>\r\n\r\n<!-- Modern -->\r\n<modern-layout *ngIf=\"layout === 'modern'\"></modern-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Layouts with vertical navigation -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n\r\n<!-- Classic -->\r\n<classic-layout *ngIf=\"layout === 'classic'\"></classic-layout>\r\n\r\n<!-- Classy -->\r\n<classy-layout *ngIf=\"layout === 'classy'\"></classy-layout>\r\n\r\n<!-- Compact -->\r\n<compact-layout *ngIf=\"layout === 'compact'\"></compact-layout>\r\n\r\n<!-- Dense -->\r\n<dense-layout *ngIf=\"layout === 'dense'\"></dense-layout>\r\n\r\n<!-- Futuristic -->\r\n<futuristic-layout *ngIf=\"layout === 'futuristic'\"></futuristic-layout>\r\n\r\n<!-- Thin -->\r\n<thin-layout *ngIf=\"layout === 'thin'\"></thin-layout>\r\n\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n<!-- Settings drawer - Remove this to remove the drawer and its button -->\r\n<!-- ----------------------------------------------------------------------------------------------------- -->\r\n\r\n\r\n\r\n\r\n<!-- Configurations Layout Settings -->\r\n<!-- settings></settings -->\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}