{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { Error500Component } from 'app/modules/admin/pages/error/error-500/error-500.component';\nimport { error500Routes } from 'app/modules/admin/pages/error/error-500/error-500.routing';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass Error500Module {\n  static #_ = this.ɵfac = function Error500Module_Factory(t) {\n    return new (t || Error500Module)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: Error500Module\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forChild(error500Routes)]\n  });\n}\nexport { Error500Module };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(Error500Module, {\n    declarations: [Error500Component],\n    imports: [i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","Error500Component","error500Routes","Error500Module","_","_2","_3","forChild","declarations","imports","i1"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\admin\\pages\\error\\error-500\\error-500.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Error500Component } from 'app/modules/admin/pages/error/error-500/error-500.component';\r\nimport { error500Routes } from 'app/modules/admin/pages/error/error-500/error-500.routing';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        Error500Component\r\n    ],\r\n    imports     : [\r\n        RouterModule.forChild(error500Routes)\r\n    ]\r\n})\r\nexport class Error500Module\r\n{\r\n}\r\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,6DAA6D;AAC/F,SAASC,cAAc,QAAQ,2DAA2D;;;AAE1F,MAQaC,cAAc;EAAA,QAAAC,CAAA,G;qBAAdD,cAAc;EAAA;EAAA,QAAAE,EAAA,G;UAAdF;EAAc;EAAA,QAAAG,EAAA,G;cAHnBN,YAAY,CAACO,QAAQ,CAACL,cAAc,CAAC;EAAA;;SAGhCC,cAAc;;2EAAdA,cAAc;IAAAK,YAAA,GANnBP,iBAAiB;IAAAQ,OAAA,GAAAC,EAAA,CAAAV,YAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}