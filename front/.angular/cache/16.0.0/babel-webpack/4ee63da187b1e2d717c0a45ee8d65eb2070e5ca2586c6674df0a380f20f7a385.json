{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TemplatesService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = 'http://localhost:3333/templates';\n  }\n  getAll() {\n    return this.get('/get', {});\n  }\n  makeRequest(httpMethod, endpoint, params) {\n    const fullUrl = `${this.endpoint.trim()}${endpoint}`;\n    return this.http[httpMethod](fullUrl, params instanceof HttpParams ? {\n      params\n    } : params).pipe(catchError(this.handleError));\n  }\n  remove(params) {\n    return this.makeRequest('post', '/remove', params);\n  }\n  insert(params) {\n    return this.makeRequest('post', '/insert', params);\n  }\n  update(params) {\n    return this.makeRequest('put', '/update', params);\n  }\n  get(path, params) {\n    return this.makeRequest('get', path, new HttpParams({\n      fromObject: params\n    }));\n  }\n  handleError(error) {\n    console.error('Ocorreu um erro:', error);\n    return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\n  }\n}\nTemplatesService.ɵfac = function TemplatesService_Factory(t) {\n  return new (t || TemplatesService)(i0.ɵɵinject(i1.HttpClient));\n};\nTemplatesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TemplatesService,\n  factory: TemplatesService.ɵfac,\n  providedIn: 'root'\n});\nexport { TemplatesService };","map":{"version":3,"names":["HttpParams","throwError","catchError","TemplatesService","constructor","http","endpoint","getAll","get","makeRequest","httpMethod","params","fullUrl","trim","pipe","handleError","remove","insert","update","path","fromObject","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\modules\\auth\\api-authenticate\\templates\\templates.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TemplatesService {\r\n  private endpoint = 'http://localhost:3333/templates';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getAll(): Observable<any> {\r\n    return this.get('/get', {});\r\n  }\r\n\r\n  private makeRequest<T>(httpMethod: string, endpoint: string, params?: any): Observable<T> {\r\n    const fullUrl = `${this.endpoint.trim()}${endpoint}`;\r\n\r\n    return this.http[httpMethod](\r\n      fullUrl,\r\n      params instanceof HttpParams ? { params } : params\r\n    ).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  remove(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/remove', params);\r\n  }\r\n\r\n  insert(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/insert', params);\r\n  }\r\n\r\n  update(params: any): Observable<any> {\r\n    return this.makeRequest('put', '/update', params);\r\n  }\r\n\r\n  get(path: string, params: { [param: string]: string | number | boolean }): Observable<any> {\r\n    return this.makeRequest('get', path, new HttpParams({ fromObject: params }));\r\n  }\r\n\r\n\r\n\r\n\r\n  private handleError(error: any): Observable<never> {\r\n    console.error('Ocorreu um erro:', error);\r\n    return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAE3C,MAGaC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,iCAAiC;EAEb;EAGvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;EAC7B;EAEQC,WAAWA,CAAIC,UAAkB,EAAEJ,QAAgB,EAAEK,MAAY;IACvE,MAAMC,OAAO,GAAG,GAAG,IAAI,CAACN,QAAQ,CAACO,IAAI,EAAE,GAAGP,QAAQ,EAAE;IAEpD,OAAO,IAAI,CAACD,IAAI,CAACK,UAAU,CAAC,CAC1BE,OAAO,EACPD,MAAM,YAAYX,UAAU,GAAG;MAAEW;IAAM,CAAE,GAAGA,MAAM,CACnD,CAACG,IAAI,CACJZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAC7B;EACH;EAEAC,MAAMA,CAACL,MAAW;IAChB,OAAO,IAAI,CAACF,WAAW,CAAC,MAAM,EAAE,SAAS,EAAEE,MAAM,CAAC;EACpD;EAEAM,MAAMA,CAACN,MAAW;IAChB,OAAO,IAAI,CAACF,WAAW,CAAC,MAAM,EAAE,SAAS,EAAEE,MAAM,CAAC;EACpD;EAEAO,MAAMA,CAACP,MAAW;IAChB,OAAO,IAAI,CAACF,WAAW,CAAC,KAAK,EAAE,SAAS,EAAEE,MAAM,CAAC;EACnD;EAEAH,GAAGA,CAACW,IAAY,EAAER,MAAsD;IACtE,OAAO,IAAI,CAACF,WAAW,CAAC,KAAK,EAAEU,IAAI,EAAE,IAAInB,UAAU,CAAC;MAAEoB,UAAU,EAAET;IAAM,CAAE,CAAC,CAAC;EAC9E;EAKQI,WAAWA,CAACM,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,OAAOpB,UAAU,CAAC,6DAA6D,CAAC;EAClF;;AA3CWE,gBAAgB,C;mBAAhBA,gBAAgB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBvB,gBAAgB,C;SAAhBA,gBAAgB;EAAAwB,OAAA,EAAhBxB,gBAAgB,CAAAyB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEP1B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}