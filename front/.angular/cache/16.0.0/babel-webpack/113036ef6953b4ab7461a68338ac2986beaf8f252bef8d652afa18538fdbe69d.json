{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { NavigationEnd } from '@angular/router';\nimport { filter, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass FuseSplashScreenService {\n  /**\n   * Constructor\n   */\n  constructor(_document, _router) {\n    this._document = _document;\n    this._router = _router;\n    // Hide it on the first NavigationEnd event\n    this._router.events.pipe(filter(event => event instanceof NavigationEnd), take(1)).subscribe(() => {\n      this.hide();\n    });\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Show the splash screen\n   */\n  show() {\n    this._document.body.classList.remove('fuse-splash-screen-hidden');\n  }\n  /**\n   * Hide the splash screen\n   */\n  hide() {\n    this._document.body.classList.add('fuse-splash-screen-hidden');\n  }\n}\nFuseSplashScreenService.ɵfac = function FuseSplashScreenService_Factory(t) {\n  return new (t || FuseSplashScreenService)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Router));\n};\nFuseSplashScreenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FuseSplashScreenService,\n  factory: FuseSplashScreenService.ɵfac\n});\nexport { FuseSplashScreenService };","map":{"version":3,"names":["DOCUMENT","NavigationEnd","filter","take","FuseSplashScreenService","constructor","_document","_router","events","pipe","event","subscribe","hide","show","body","classList","remove","add","i0","ɵɵinject","i1","Router","factory","ɵfac"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\@fuse\\services\\splash-screen\\splash-screen.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter, take } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FuseSplashScreenService\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        @Inject(DOCUMENT) private _document: any,\r\n        private _router: Router\r\n    )\r\n    {\r\n        // Hide it on the first NavigationEnd event\r\n        this._router.events\r\n            .pipe(\r\n                filter(event => event instanceof NavigationEnd),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this.hide();\r\n            });\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Show the splash screen\r\n     */\r\n    show(): void\r\n    {\r\n        this._document.body.classList.remove('fuse-splash-screen-hidden');\r\n    }\r\n\r\n    /**\r\n     * Hide the splash screen\r\n     */\r\n    hide(): void\r\n    {\r\n        this._document.body.classList.add('fuse-splash-screen-hidden');\r\n    }\r\n}\r\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,aAAa,QAAgB,iBAAiB;AACvD,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;;;AAEnC,MACaC,uBAAuB;EAEhC;;;EAGAC,YAC8BC,SAAc,EAChCC,OAAe;IADG,KAAAD,SAAS,GAATA,SAAS;IAC3B,KAAAC,OAAO,GAAPA,OAAO;IAGf;IACA,IAAI,CAACA,OAAO,CAACC,MAAM,CACdC,IAAI,CACDP,MAAM,CAACQ,KAAK,IAAIA,KAAK,YAAYT,aAAa,CAAC,EAC/CE,IAAI,CAAC,CAAC,CAAC,CACV,CACAQ,SAAS,CAAC,MAAK;MACZ,IAAI,CAACC,IAAI,EAAE;IACf,CAAC,CAAC;EACV;EAEA;EACA;EACA;EAEA;;;EAGAC,IAAIA,CAAA;IAEA,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,2BAA2B,CAAC;EACrE;EAEA;;;EAGAJ,IAAIA,CAAA;IAEA,IAAI,CAACN,SAAS,CAACQ,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,2BAA2B,CAAC;EAClE;;AAvCSb,uBAAuB,C;mBAAvBA,uBAAuB,EAAAc,EAAA,CAAAC,QAAA,CAMpBnB,QAAQ,GAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AANXjB,uBAAuB,C;SAAvBA,uBAAuB;EAAAkB,OAAA,EAAvBlB,uBAAuB,CAAAmB;AAAA;SAAvBnB,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}