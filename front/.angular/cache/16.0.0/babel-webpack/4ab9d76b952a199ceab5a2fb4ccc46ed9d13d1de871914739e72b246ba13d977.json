{"ast":null,"code":"import { cloneDeep } from 'lodash-es';\nimport { project as projectData } from 'app/mock-api/dashboards/project/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/lib/mock-api\";\nclass ProjectMockApi {\n  /**\n   * Constructor\n   */\n  constructor(_fuseMockApiService) {\n    this._fuseMockApiService = _fuseMockApiService;\n    this._project = projectData;\n    // Register Mock API handlers\n    this.registerHandlers();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Register Mock API handlers\n   */\n  registerHandlers() {\n    // -----------------------------------------------------------------------------------------------------\n    // @ Sales - GET\n    // -----------------------------------------------------------------------------------------------------\n    this._fuseMockApiService.onGet('api/dashboards/project').reply(() => [200, cloneDeep(this._project)]);\n  }\n  static #_ = this.ɵfac = function ProjectMockApi_Factory(t) {\n    return new (t || ProjectMockApi)(i0.ɵɵinject(i1.FuseMockApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectMockApi,\n    factory: ProjectMockApi.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProjectMockApi };","map":{"version":3,"names":["cloneDeep","project","projectData","ProjectMockApi","constructor","_fuseMockApiService","_project","registerHandlers","onGet","reply","_","i0","ɵɵinject","i1","FuseMockApiService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\mock-api\\dashboards\\project\\api.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { FuseMockApiService } from '@fuse/lib/mock-api';\r\nimport { project as projectData } from 'app/mock-api/dashboards/project/data';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProjectMockApi\r\n{\r\n    private _project: any = projectData;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseMockApiService: FuseMockApiService)\r\n    {\r\n        // Register Mock API handlers\r\n        this.registerHandlers();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Register Mock API handlers\r\n     */\r\n    registerHandlers(): void\r\n    {\r\n        // -----------------------------------------------------------------------------------------------------\r\n        // @ Sales - GET\r\n        // -----------------------------------------------------------------------------------------------------\r\n        this._fuseMockApiService\r\n            .onGet('api/dashboards/project')\r\n            .reply(() => [200, cloneDeep(this._project)]);\r\n    }\r\n}\r\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,WAAW;AAErC,SAASC,OAAO,IAAIC,WAAW,QAAQ,sCAAsC;;;AAE7E,MAGaC,cAAc;EAIvB;;;EAGAC,YAAoBC,mBAAuC;IAAvC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IAL/B,KAAAC,QAAQ,GAAQJ,WAAW;IAO/B;IACA,IAAI,CAACK,gBAAgB,EAAE;EAC3B;EAEA;EACA;EACA;EAEA;;;EAGAA,gBAAgBA,CAAA;IAEZ;IACA;IACA;IACA,IAAI,CAACF,mBAAmB,CACnBG,KAAK,CAAC,wBAAwB,CAAC,CAC/BC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAET,SAAS,CAAC,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC;EACrD;EAAC,QAAAI,CAAA,G;qBA5BQP,cAAc,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdZ,cAAc;IAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAETf,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}