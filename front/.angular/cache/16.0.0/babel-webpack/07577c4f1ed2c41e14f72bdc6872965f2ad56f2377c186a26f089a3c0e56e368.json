{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass TagSharedService {\n  constructor() {\n    this.jsonSubject = new BehaviorSubject(null);\n    this.json$ = this.jsonSubject.asObservable();\n  }\n  setJson(json) {\n    this.jsonSubject.next(json);\n  }\n  static #_ = this.ɵfac = function TagSharedService_Factory(t) {\n    return new (t || TagSharedService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TagSharedService,\n    factory: TagSharedService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { TagSharedService };","map":{"version":3,"names":["BehaviorSubject","TagSharedService","constructor","jsonSubject","json$","asObservable","setJson","json","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\admin\\apps\\tags\\tag-shared.service.ts"],"sourcesContent":["// shared.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TagSharedService {\r\n  private jsonSubject = new BehaviorSubject<any>(null);\r\n  json$ = this.jsonSubject.asObservable();\r\n\r\n  setJson(json: any) {\r\n    this.jsonSubject.next(json);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAEtC,MAGaC,gBAAgB;EAH7BC,YAAA;IAIU,KAAAC,WAAW,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IACpD,KAAAI,KAAK,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;;EAEvCC,OAAOA,CAACC,IAAS;IACf,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACD,IAAI,CAAC;EAC7B;EAAC,QAAAE,CAAA,G;qBANUR,gBAAgB;EAAA;EAAA,QAAAS,EAAA,G;WAAhBT,gBAAgB;IAAAU,OAAA,EAAhBV,gBAAgB,CAAAW,IAAA;IAAAC,UAAA,EAFf;EAAM;;SAEPZ,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}