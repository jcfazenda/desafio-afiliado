{"ast":null,"code":"import { cloneDeep } from 'lodash-es';\nimport { compactNavigation, defaultNavigation, futuristicNavigation, horizontalNavigation } from 'app/mock-api/common/navigation/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/lib/mock-api\";\nclass NavigationMockApi {\n  /**\n   * Constructor\n   */\n  constructor(_fuseMockApiService) {\n    this._fuseMockApiService = _fuseMockApiService;\n    this._compactNavigation = compactNavigation;\n    this._defaultNavigation = defaultNavigation;\n    this._futuristicNavigation = futuristicNavigation;\n    this._horizontalNavigation = horizontalNavigation;\n    // Register Mock API handlers\n    this.registerHandlers();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Register Mock API handlers\n   */\n  registerHandlers() {\n    // -----------------------------------------------------------------------------------------------------\n    // @ Navigation - GET\n    // -----------------------------------------------------------------------------------------------------\n    this._fuseMockApiService.onGet('api/common/navigation').reply(() => {\n      // Fill compact navigation children using the default navigation\n      this._compactNavigation.forEach(compactNavItem => {\n        this._defaultNavigation.forEach(defaultNavItem => {\n          if (defaultNavItem.id === compactNavItem.id) {\n            compactNavItem.children = cloneDeep(defaultNavItem.children);\n          }\n        });\n      });\n      // Fill futuristic navigation children using the default navigation\n      this._futuristicNavigation.forEach(futuristicNavItem => {\n        this._defaultNavigation.forEach(defaultNavItem => {\n          if (defaultNavItem.id === futuristicNavItem.id) {\n            futuristicNavItem.children = cloneDeep(defaultNavItem.children);\n          }\n        });\n      });\n      // Fill horizontal navigation children using the default navigation\n      this._horizontalNavigation.forEach(horizontalNavItem => {\n        this._defaultNavigation.forEach(defaultNavItem => {\n          if (defaultNavItem.id === horizontalNavItem.id) {\n            horizontalNavItem.children = cloneDeep(defaultNavItem.children);\n          }\n        });\n      });\n      // Return the response\n      return [200, {\n        compact: cloneDeep(this._compactNavigation),\n        default: cloneDeep(this._defaultNavigation),\n        futuristic: cloneDeep(this._futuristicNavigation),\n        horizontal: cloneDeep(this._horizontalNavigation)\n      }];\n    });\n  }\n  static #_ = this.ɵfac = function NavigationMockApi_Factory(t) {\n    return new (t || NavigationMockApi)(i0.ɵɵinject(i1.FuseMockApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavigationMockApi,\n    factory: NavigationMockApi.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { NavigationMockApi };","map":{"version":3,"names":["cloneDeep","compactNavigation","defaultNavigation","futuristicNavigation","horizontalNavigation","NavigationMockApi","constructor","_fuseMockApiService","_compactNavigation","_defaultNavigation","_futuristicNavigation","_horizontalNavigation","registerHandlers","onGet","reply","forEach","compactNavItem","defaultNavItem","id","children","futuristicNavItem","horizontalNavItem","compact","default","futuristic","horizontal","_","i0","ɵɵinject","i1","FuseMockApiService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\mock-api\\common\\navigation\\api.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { FuseNavigationItem } from '@fuse/components/navigation';\r\nimport { FuseMockApiService } from '@fuse/lib/mock-api';\r\nimport { compactNavigation, defaultNavigation, futuristicNavigation, horizontalNavigation } from 'app/mock-api/common/navigation/data';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NavigationMockApi\r\n{\r\n    private readonly _compactNavigation: FuseNavigationItem[] = compactNavigation;\r\n    private readonly _defaultNavigation: FuseNavigationItem[] = defaultNavigation;\r\n    private readonly _futuristicNavigation: FuseNavigationItem[] = futuristicNavigation;\r\n    private readonly _horizontalNavigation: FuseNavigationItem[] = horizontalNavigation;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _fuseMockApiService: FuseMockApiService)\r\n    {\r\n        // Register Mock API handlers\r\n        this.registerHandlers();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Register Mock API handlers\r\n     */\r\n    registerHandlers(): void\r\n    {\r\n        // -----------------------------------------------------------------------------------------------------\r\n        // @ Navigation - GET\r\n        // -----------------------------------------------------------------------------------------------------\r\n        this._fuseMockApiService\r\n            .onGet('api/common/navigation')\r\n            .reply(() => {\r\n\r\n                // Fill compact navigation children using the default navigation\r\n                this._compactNavigation.forEach((compactNavItem) => {\r\n                    this._defaultNavigation.forEach((defaultNavItem) => {\r\n                        if ( defaultNavItem.id === compactNavItem.id )\r\n                        {\r\n                            compactNavItem.children = cloneDeep(defaultNavItem.children);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Fill futuristic navigation children using the default navigation\r\n                this._futuristicNavigation.forEach((futuristicNavItem) => {\r\n                    this._defaultNavigation.forEach((defaultNavItem) => {\r\n                        if ( defaultNavItem.id === futuristicNavItem.id )\r\n                        {\r\n                            futuristicNavItem.children = cloneDeep(defaultNavItem.children);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Fill horizontal navigation children using the default navigation\r\n                this._horizontalNavigation.forEach((horizontalNavItem) => {\r\n                    this._defaultNavigation.forEach((defaultNavItem) => {\r\n                        if ( defaultNavItem.id === horizontalNavItem.id )\r\n                        {\r\n                            horizontalNavItem.children = cloneDeep(defaultNavItem.children);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Return the response\r\n                return [\r\n                    200,\r\n                    {\r\n                        compact   : cloneDeep(this._compactNavigation),\r\n                        default   : cloneDeep(this._defaultNavigation),\r\n                        futuristic: cloneDeep(this._futuristicNavigation),\r\n                        horizontal: cloneDeep(this._horizontalNavigation)\r\n                    }\r\n                ];\r\n            });\r\n    }\r\n}\r\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,WAAW;AAGrC,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAQ,qCAAqC;;;AAEtI,MAGaC,iBAAiB;EAO1B;;;EAGAC,YAAoBC,mBAAuC;IAAvC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IARtB,KAAAC,kBAAkB,GAAyBP,iBAAiB;IAC5D,KAAAQ,kBAAkB,GAAyBP,iBAAiB;IAC5D,KAAAQ,qBAAqB,GAAyBP,oBAAoB;IAClE,KAAAQ,qBAAqB,GAAyBP,oBAAoB;IAO/E;IACA,IAAI,CAACQ,gBAAgB,EAAE;EAC3B;EAEA;EACA;EACA;EAEA;;;EAGAA,gBAAgBA,CAAA;IAEZ;IACA;IACA;IACA,IAAI,CAACL,mBAAmB,CACnBM,KAAK,CAAC,uBAAuB,CAAC,CAC9BC,KAAK,CAAC,MAAK;MAER;MACA,IAAI,CAACN,kBAAkB,CAACO,OAAO,CAAEC,cAAc,IAAI;QAC/C,IAAI,CAACP,kBAAkB,CAACM,OAAO,CAAEE,cAAc,IAAI;UAC/C,IAAKA,cAAc,CAACC,EAAE,KAAKF,cAAc,CAACE,EAAE,EAC5C;YACIF,cAAc,CAACG,QAAQ,GAAGnB,SAAS,CAACiB,cAAc,CAACE,QAAQ,CAAC;;QAEpE,CAAC,CAAC;MACN,CAAC,CAAC;MAEF;MACA,IAAI,CAACT,qBAAqB,CAACK,OAAO,CAAEK,iBAAiB,IAAI;QACrD,IAAI,CAACX,kBAAkB,CAACM,OAAO,CAAEE,cAAc,IAAI;UAC/C,IAAKA,cAAc,CAACC,EAAE,KAAKE,iBAAiB,CAACF,EAAE,EAC/C;YACIE,iBAAiB,CAACD,QAAQ,GAAGnB,SAAS,CAACiB,cAAc,CAACE,QAAQ,CAAC;;QAEvE,CAAC,CAAC;MACN,CAAC,CAAC;MAEF;MACA,IAAI,CAACR,qBAAqB,CAACI,OAAO,CAAEM,iBAAiB,IAAI;QACrD,IAAI,CAACZ,kBAAkB,CAACM,OAAO,CAAEE,cAAc,IAAI;UAC/C,IAAKA,cAAc,CAACC,EAAE,KAAKG,iBAAiB,CAACH,EAAE,EAC/C;YACIG,iBAAiB,CAACF,QAAQ,GAAGnB,SAAS,CAACiB,cAAc,CAACE,QAAQ,CAAC;;QAEvE,CAAC,CAAC;MACN,CAAC,CAAC;MAEF;MACA,OAAO,CACH,GAAG,EACH;QACIG,OAAO,EAAKtB,SAAS,CAAC,IAAI,CAACQ,kBAAkB,CAAC;QAC9Ce,OAAO,EAAKvB,SAAS,CAAC,IAAI,CAACS,kBAAkB,CAAC;QAC9Ce,UAAU,EAAExB,SAAS,CAAC,IAAI,CAACU,qBAAqB,CAAC;QACjDe,UAAU,EAAEzB,SAAS,CAAC,IAAI,CAACW,qBAAqB;OACnD,CACJ;IACL,CAAC,CAAC;EACV;EAAC,QAAAe,CAAA,G;qBAzEQrB,iBAAiB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjB1B,iBAAiB;IAAA2B,OAAA,EAAjB3B,iBAAiB,CAAA4B,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAET7B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}