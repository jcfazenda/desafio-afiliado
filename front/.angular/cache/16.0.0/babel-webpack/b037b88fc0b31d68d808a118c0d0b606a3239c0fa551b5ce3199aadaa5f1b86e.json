{"ast":null,"code":"import { PopUpComponent } from '../popup/popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nclass PopupService {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  openPopup(configuration) {\n    this.dialog.open(PopUpComponent, {\n      data: {\n        configuration\n      },\n      width: '900px',\n      height: '1100px'\n    });\n  }\n  static #_ = this.ɵfac = function PopupService_Factory(t) {\n    return new (t || PopupService)(i0.ɵɵinject(i1.MatDialog));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PopupService,\n    factory: PopupService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PopupService };","map":{"version":3,"names":["PopUpComponent","PopupService","constructor","dialog","openPopup","configuration","open","data","width","height","_","i0","ɵɵinject","i1","MatDialog","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\admin\\apps\\contacts\\popup\\popup.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PopUpComponent } from '../popup/popup.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PopupService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openPopup(configuration: any): void { \r\n    this.dialog.open(PopUpComponent, {\r\n\r\n      data: { configuration },\r\n      width: '900px',\r\n      height: '1100px',  \r\n     \r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,0BAA0B;;;AAEzD,MAGaC,YAAY;EACvBC,YAAoBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;EAAc;EAExCC,SAASA,CAACC,aAAkB;IAC1B,IAAI,CAACF,MAAM,CAACG,IAAI,CAACN,cAAc,EAAE;MAE/BO,IAAI,EAAE;QAAEF;MAAa,CAAE;MACvBG,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE;KAET,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAXUT,YAAY,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZd,YAAY;IAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPjB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}