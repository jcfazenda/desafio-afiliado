{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { fuseAnimations } from '@fuse/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"@fuse/components/alert/alert.component\";\nimport * as i8 from \"@angular/common\";\nfunction ForgotPasswordClassicComponent_fuse_alert_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fuse-alert\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"appearance\", \"outline\")(\"showIcon\", false)(\"type\", ctx_r0.alert.type)(\"@shake\", ctx_r0.alert.type === \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alert.message, \" \");\n  }\n}\nfunction ForgotPasswordClassicComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordClassicComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordClassicComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Send reset link \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordClassicComponent_mat_progress_spinner_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 18);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 24)(\"mode\", \"indeterminate\");\n  }\n}\nconst _c0 = function () {\n  return [\"/sign-in\"];\n};\nclass ForgotPasswordClassicComponent {\n  /**\n   * Constructor\n   */\n  constructor(_formBuilder) {\n    this._formBuilder = _formBuilder;\n    this.alert = {\n      type: 'success',\n      message: ''\n    };\n    this.showAlert = false;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Create the form\n    this.forgotPasswordForm = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Send the reset link\n   */\n  sendResetLink() {}\n}\nForgotPasswordClassicComponent.ɵfac = function ForgotPasswordClassicComponent_Factory(t) {\n  return new (t || ForgotPasswordClassicComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder));\n};\nForgotPasswordClassicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForgotPasswordClassicComponent,\n  selectors: [[\"forgot-password-classic\"]],\n  decls: 26,\n  vars: 11,\n  consts: [[1, \"flex\", \"flex-col\", \"flex-auto\", \"items-center\", \"sm:justify-center\", \"min-w-0\"], [1, \"w-full\", \"sm:w-auto\", \"py-8\", \"px-4\", \"sm:p-12\", \"sm:rounded-2xl\", \"sm:shadow\", \"sm:bg-card\"], [1, \"w-full\", \"max-w-80\", \"sm:w-80\", \"mx-auto\", \"sm:mx-0\"], [1, \"w-12\"], [\"src\", \"assets/images/logo/logo.svg\"], [1, \"mt-8\", \"text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-tight\"], [1, \"mt-0.5\", \"font-medium\"], [\"class\", \"mt-8\", 3, \"appearance\", \"showIcon\", \"type\", 4, \"ngIf\"], [1, \"mt-8\", 3, \"formGroup\"], [\"forgotPasswordNgForm\", \"ngForm\"], [1, \"w-full\"], [\"id\", \"email\", \"matInput\", \"\", 3, \"formControlName\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", 1, \"fuse-mat-button-large\", \"w-full\", \"mt-3\", 3, \"color\", \"disabled\", \"click\"], [3, \"diameter\", \"mode\", 4, \"ngIf\"], [1, \"mt-8\", \"text-md\", \"font-medium\", \"text-secondary\"], [1, \"ml-1\", \"text-primary-500\", \"hover:underline\", 3, \"routerLink\"], [1, \"mt-8\", 3, \"appearance\", \"showIcon\", \"type\"], [3, \"diameter\", \"mode\"]],\n  template: function ForgotPasswordClassicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵtext(6, \"Forgot password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵtext(8, \"Fill the form to reset your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, ForgotPasswordClassicComponent_fuse_alert_9_Template, 2, 5, \"fuse-alert\", 7);\n      i0.ɵɵelementStart(10, \"form\", 8, 9)(12, \"mat-form-field\", 10)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵtemplate(16, ForgotPasswordClassicComponent_mat_error_16_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵtemplate(17, ForgotPasswordClassicComponent_mat_error_17_Template, 2, 0, \"mat-error\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function ForgotPasswordClassicComponent_Template_button_click_18_listener() {\n        return ctx.sendResetLink();\n      });\n      i0.ɵɵtemplate(19, ForgotPasswordClassicComponent_span_19_Template, 2, 0, \"span\", 12);\n      i0.ɵɵtemplate(20, ForgotPasswordClassicComponent_mat_progress_spinner_20_Template, 1, 2, \"mat-progress-spinner\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 15)(22, \"span\");\n      i0.ɵɵtext(23, \"Return to\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 16);\n      i0.ɵɵtext(25, \"sign in \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControlName\", \"email\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"email\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"color\", \"primary\")(\"disabled\", ctx.forgotPasswordForm.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forgotPasswordForm.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.disabled);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n    }\n  },\n  dependencies: [i2.RouterLink, i3.MatButton, i4.MatFormField, i4.MatLabel, i4.MatError, i5.MatInput, i6.MatProgressSpinner, i7.FuseAlertComponent, i8.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2,\n  data: {\n    animation: fuseAnimations\n  }\n});\nexport { ForgotPasswordClassicComponent };","map":{"version":3,"names":["Validators","fuseAnimations","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","alert","type","ɵɵadvance","ɵɵtextInterpolate1","message","ɵɵelement","ForgotPasswordClassicComponent","constructor","_formBuilder","showAlert","ngOnInit","forgotPasswordForm","group","email","required","sendResetLink","ɵɵdirectiveInject","i1","UntypedFormBuilder","selectors","decls","vars","consts","template","ForgotPasswordClassicComponent_Template","rf","ctx","ɵɵtemplate","ForgotPasswordClassicComponent_fuse_alert_9_Template","ForgotPasswordClassicComponent_mat_error_16_Template","ForgotPasswordClassicComponent_mat_error_17_Template","ɵɵlistener","ForgotPasswordClassicComponent_Template_button_click_18_listener","ForgotPasswordClassicComponent_span_19_Template","ForgotPasswordClassicComponent_mat_progress_spinner_20_Template","get","hasError","disabled","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\modules\\admin\\pages\\authentication\\forgot-password\\classic\\forgot-password.component.ts","C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\modules\\admin\\pages\\authentication\\forgot-password\\classic\\forgot-password.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseAlertType } from '@fuse/components/alert';\r\n\r\n@Component({\r\n    selector     : 'forgot-password-classic',\r\n    templateUrl  : './forgot-password.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations\r\n})\r\nexport class ForgotPasswordClassicComponent implements OnInit\r\n{\r\n    alert: { type: FuseAlertType; message: string } = {\r\n        type   : 'success',\r\n        message: ''\r\n    };\r\n    forgotPasswordForm: UntypedFormGroup;\r\n    showAlert: boolean = false;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _formBuilder: UntypedFormBuilder\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Create the form\r\n        this.forgotPasswordForm = this._formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]]\r\n        });\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Send the reset link\r\n     */\r\n    sendResetLink(): void\r\n    {\r\n    }\r\n}\r\n","<div class=\"flex flex-col flex-auto items-center sm:justify-center min-w-0\">\r\n    <div class=\"w-full sm:w-auto py-8 px-4 sm:p-12 sm:rounded-2xl sm:shadow sm:bg-card\">\r\n        <div class=\"w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\r\n            <!-- Logo -->\r\n            <div class=\"w-12\">\r\n                <img src=\"assets/images/logo/logo.svg\">\r\n            </div>\r\n\r\n            <!-- Title -->\r\n            <div class=\"mt-8 text-4xl font-extrabold tracking-tight leading-tight\">Forgot password?</div>\r\n            <div class=\"mt-0.5 font-medium\">Fill the form to reset your password</div>\r\n\r\n            <!-- Alert -->\r\n            <fuse-alert\r\n                class=\"mt-8\"\r\n                *ngIf=\"showAlert\"\r\n                [appearance]=\"'outline'\"\r\n                [showIcon]=\"false\"\r\n                [type]=\"alert.type\"\r\n                [@shake]=\"alert.type === 'error'\">\r\n                {{alert.message}}\r\n            </fuse-alert>\r\n\r\n            <!-- Forgot password form -->\r\n            <form\r\n                class=\"mt-8\"\r\n                [formGroup]=\"forgotPasswordForm\"\r\n                #forgotPasswordNgForm=\"ngForm\">\r\n\r\n                <!-- Email field -->\r\n                <mat-form-field class=\"w-full\">\r\n                    <mat-label>Email address</mat-label>\r\n                    <input\r\n                        id=\"email\"\r\n                        matInput\r\n                        [formControlName]=\"'email'\">\r\n                    <mat-error *ngIf=\"forgotPasswordForm.get('email').hasError('required')\">\r\n                        Email address is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"forgotPasswordForm.get('email').hasError('email')\">\r\n                        Please enter a valid email address\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <!-- Submit button -->\r\n                <button\r\n                    class=\"fuse-mat-button-large w-full mt-3\"\r\n                    mat-flat-button\r\n                    [color]=\"'primary'\"\r\n                    [disabled]=\"forgotPasswordForm.disabled\"\r\n                    (click)=\"sendResetLink()\">\r\n                    <span *ngIf=\"!forgotPasswordForm.disabled\">\r\n                        Send reset link\r\n                    </span>\r\n                    <mat-progress-spinner\r\n                        *ngIf=\"forgotPasswordForm.disabled\"\r\n                        [diameter]=\"24\"\r\n                        [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n                </button>\r\n\r\n                <!-- Form footer -->\r\n                <div class=\"mt-8 text-md font-medium text-secondary\">\r\n                    <span>Return to</span>\r\n                    <a\r\n                        class=\"ml-1 text-primary-500 hover:underline\"\r\n                        [routerLink]=\"['/sign-in']\">sign in\r\n                    </a>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}