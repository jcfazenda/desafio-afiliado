{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TranslocoHttpLoader {\n  /**\n   * Constructor\n   */\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Get translation\n   *\n   * @param lang\n   */\n  getTranslation(lang) {\n    return this._httpClient.get(`./assets/i18n/${lang}.json`);\n  }\n}\nTranslocoHttpLoader.ɵfac = function TranslocoHttpLoader_Factory(t) {\n  return new (t || TranslocoHttpLoader)(i0.ɵɵinject(i1.HttpClient));\n};\nTranslocoHttpLoader.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TranslocoHttpLoader,\n  factory: TranslocoHttpLoader.ɵfac,\n  providedIn: 'root'\n});\nexport { TranslocoHttpLoader };","map":{"version":3,"names":["TranslocoHttpLoader","constructor","_httpClient","getTranslation","lang","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\core\\transloco\\transloco.http-loader.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Translation, TranslocoLoader } from '@ngneat/transloco';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TranslocoHttpLoader implements TranslocoLoader\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _httpClient: HttpClient)\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get translation\r\n     *\r\n     * @param lang\r\n     */\r\n    getTranslation(lang: string): Observable<Translation>\r\n    {\r\n        return this._httpClient.get<Translation>(`./assets/i18n/${lang}.json`);\r\n    }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,mBAAmB;EAE5B;;;EAGAC,YACYC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAEvB;EAEA;EACA;EACA;EAEA;;;;;EAKAC,cAAcA,CAACC,IAAY;IAEvB,OAAO,IAAI,CAACF,WAAW,CAACG,GAAG,CAAc,iBAAiBD,IAAI,OAAO,CAAC;EAC1E;;AAtBSJ,mBAAmB,C;mBAAnBA,mBAAmB,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBT,mBAAmB,C;SAAnBA,mBAAmB;EAAAU,OAAA,EAAnBV,mBAAmB,CAAAW,IAAA;EAAAC,UAAA,EAFhB;AAAM;SAETZ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}