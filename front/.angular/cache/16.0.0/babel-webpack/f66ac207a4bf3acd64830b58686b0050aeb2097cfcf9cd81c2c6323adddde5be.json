{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ConfigurationService {\n  constructor(http) {\n    this.http = http;\n    this.CodeApi = 0;\n    this.endpoint = \"\";\n  }\n  /* chamadas endpoints */\n  getConfigurations() {\n    const endpoint = 'http://localhost:3333/configurations/get';\n    return this.get(endpoint, {}).pipe(catchError(this.handleError));\n  }\n  getById(id) {\n    const body = {\n      id\n    };\n    const endpoint = 'http://localhost:3333/configurations/getById';\n    return this.http.post(`${this.endpoint.trim()}${endpoint}`, body).pipe(catchError(this.handleError));\n  }\n  generateArchive(id_configuration) {\n    const body = {\n      id_configuration\n    };\n    const endpoint = 'http://localhost:3333/configurations/generateArchive';\n    return this.http.post(`${this.endpoint.trim()}${endpoint}`, body).pipe(catchError(this.handleError));\n  }\n  get(path, params) {\n    const queryParams = new HttpParams({\n      fromObject: params\n    });\n    return this.http.get(`${this.endpoint.trim()}${path}`, {\n      params: queryParams\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    console.error('Ocorreu um erro:', error);\n    return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\n  }\n}\nConfigurationService.ɵfac = function ConfigurationService_Factory(t) {\n  return new (t || ConfigurationService)(i0.ɵɵinject(i1.HttpClient));\n};\nConfigurationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigurationService,\n  factory: ConfigurationService.ɵfac\n});\nexport { ConfigurationService };","map":{"version":3,"names":["throwError","HttpParams","catchError","ConfigurationService","constructor","http","CodeApi","endpoint","getConfigurations","get","pipe","handleError","getById","id","body","post","trim","generateArchive","id_configuration","path","params","queryParams","fromObject","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\modules\\auth\\api-authenticate\\configuration\\configuration.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core'; \r\nimport { throwError, Observable, of, BehaviorSubject } from 'rxjs';  \r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map, catchError, tap } from 'rxjs/operators';   \r\n\r\n \r\n@Injectable()\r\nexport class ConfigurationService {\r\n \r\n    CodeApi = 0;\r\n    Api:    any; \r\n    Hub:    any; \r\n      \r\n    Usuario: any;  \r\n    endpoint  = \"\";  \r\n\r\n    constructor(private http: HttpClient ) { \r\n        \r\n    }   \r\n \r\n    /* chamadas endpoints */\r\n    getConfigurations(): Observable<any> {\r\n        const endpoint = 'http://localhost:3333/configurations/get';\r\n        return this.get(endpoint, {}).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getById(id: any): Observable<any> {\r\n\r\n      const body = { id };\r\n      const endpoint = 'http://localhost:3333/configurations/getById';\r\n    \r\n      return this.http.post<any>(\r\n        `${this.endpoint.trim()}${endpoint}`,\r\n        body\r\n      ).pipe(\r\n        catchError(this.handleError),  // Reative o tratamento de erros\r\n        //tap(result => console.log('Resultado da requisição:', result))\r\n      );\r\n    }\r\n\r\n    generateArchive(id_configuration: any): Observable<any> {\r\n\r\n      const body = { id_configuration };\r\n      const endpoint = 'http://localhost:3333/configurations/generateArchive';\r\n    \r\n      return this.http.post<any>(\r\n        `${this.endpoint.trim()}${endpoint}`,\r\n        body\r\n      ).pipe(\r\n        catchError(this.handleError),  // Reative o tratamento de erros\r\n        //tap(result => console.log('Resultado da requisição:', result))\r\n      );\r\n    }\r\n    \r\n    get(path: string, params: { [param: string]: any }): Observable<any> { \r\n\r\n      const queryParams = new HttpParams({ fromObject: params });\r\n      return this.http.get<any>(\r\n        `${this.endpoint.trim()}${path}`,\r\n        { params: queryParams }\r\n\r\n      ).pipe(\r\n\r\n        catchError(this.handleError),\r\n        \r\n      );\r\n\r\n    }\r\n\r\n    private handleError(error: any): Observable<never> {\r\n        console.error('Ocorreu um erro:', error);\r\n        return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\r\n    }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,UAAU,QAAyC,MAAM;AAClE,SAAkCC,UAAU,QAAQ,sBAAsB;AAC1E,SAAcC,UAAU,QAAa,gBAAgB;;;AAGrD,MACaC,oBAAoB;EAS7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPxB,KAAAC,OAAO,GAAG,CAAC;IAKX,KAAAC,QAAQ,GAAI,EAAE;EAId;EAEA;EACAC,iBAAiBA,CAAA;IACb,MAAMD,QAAQ,GAAG,0CAA0C;IAC3D,OAAO,IAAI,CAACE,GAAG,CAACF,QAAQ,EAAE,EAAE,CAAC,CAACG,IAAI,CAACR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACpE;EAEAC,OAAOA,CAACC,EAAO;IAEb,MAAMC,IAAI,GAAG;MAAED;IAAE,CAAE;IACnB,MAAMN,QAAQ,GAAG,8CAA8C;IAE/D,OAAO,IAAI,CAACF,IAAI,CAACU,IAAI,CACnB,GAAG,IAAI,CAACR,QAAQ,CAACS,IAAI,EAAE,GAAGT,QAAQ,EAAE,EACpCO,IAAI,CACL,CAACJ,IAAI,CACJR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAE7B;EACH;EAEAM,eAAeA,CAACC,gBAAqB;IAEnC,MAAMJ,IAAI,GAAG;MAAEI;IAAgB,CAAE;IACjC,MAAMX,QAAQ,GAAG,sDAAsD;IAEvE,OAAO,IAAI,CAACF,IAAI,CAACU,IAAI,CACnB,GAAG,IAAI,CAACR,QAAQ,CAACS,IAAI,EAAE,GAAGT,QAAQ,EAAE,EACpCO,IAAI,CACL,CAACJ,IAAI,CACJR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAE7B;EACH;EAEAF,GAAGA,CAACU,IAAY,EAAEC,MAAgC;IAEhD,MAAMC,WAAW,GAAG,IAAIpB,UAAU,CAAC;MAAEqB,UAAU,EAAEF;IAAM,CAAE,CAAC;IAC1D,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAClB,GAAG,IAAI,CAACF,QAAQ,CAACS,IAAI,EAAE,GAAGG,IAAI,EAAE,EAChC;MAAEC,MAAM,EAAEC;IAAW,CAAE,CAExB,CAACX,IAAI,CAEJR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAE7B;EAEH;EAEQA,WAAWA,CAACY,KAAU;IAC1BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,OAAOvB,UAAU,CAAC,6DAA6D,CAAC;EACpF;;AAjESG,oBAAoB,C;mBAApBA,oBAAoB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAApBzB,oBAAoB,C;SAApBA,oBAAoB;EAAA0B,OAAA,EAApB1B,oBAAoB,CAAA2B;AAAA;SAApB3B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}