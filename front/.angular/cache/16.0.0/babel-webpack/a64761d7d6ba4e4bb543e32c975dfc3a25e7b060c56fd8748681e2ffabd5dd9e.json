{"ast":null,"code":"import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthService } from 'app/core/auth/auth.service';\nimport { AuthInterceptor } from 'app/core/auth/auth.interceptor';\nimport * as i0 from \"@angular/core\";\nclass AuthModule {\n  static #_ = this.ɵfac = function AuthModule_Factory(t) {\n    return new (t || AuthModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AuthModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AuthService, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }],\n    imports: [HttpClientModule]\n  });\n}\nexport { AuthModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AuthModule, {\n    imports: [HttpClientModule]\n  });\n})();","map":{"version":3,"names":["HTTP_INTERCEPTORS","HttpClientModule","AuthService","AuthInterceptor","AuthModule","_","_2","_3","provide","useClass","multi","imports"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\core\\auth\\auth.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\nimport { AuthInterceptor } from 'app/core/auth/auth.interceptor';\r\n\r\n@NgModule({\r\n    imports  : [\r\n        HttpClientModule\r\n    ],\r\n    providers: [\r\n        AuthService,\r\n        {\r\n            provide : HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptor,\r\n            multi   : true\r\n        }\r\n    ]\r\n})\r\nexport class AuthModule\r\n{\r\n}\r\n"],"mappings":"AACA,SAASA,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,eAAe,QAAQ,gCAAgC;;AAEhE,MAaaC,UAAU;EAAA,QAAAC,CAAA,G;qBAAVD,UAAU;EAAA;EAAA,QAAAE,EAAA,G;UAAVF;EAAU;EAAA,QAAAG,EAAA,G;eATR,CACPL,WAAW,EACX;MACIM,OAAO,EAAGR,iBAAiB;MAC3BS,QAAQ,EAAEN,eAAe;MACzBO,KAAK,EAAK;KACb,CACJ;IAAAC,OAAA,GATGV,gBAAgB;EAAA;;SAWXG,UAAU;;2EAAVA,UAAU;IAAAO,OAAA,GAXfV,gBAAgB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}