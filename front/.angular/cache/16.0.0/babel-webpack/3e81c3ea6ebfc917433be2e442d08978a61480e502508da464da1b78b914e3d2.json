{"ast":null,"code":"import { cards, certificateHolders } from '../../../../mock-api/data/cards-dada';\nimport { Contents, Vantage } from '../../../../mock-api/data/product-content';\nimport { ProductLabels, ProductDetail } from '../../../../mock-api/data/product-label';\nimport { Projects, createNewProject, createNewThumb, createNewContent } from '../../../../mock-api/data/projects';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductsService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  getProjects() {\n    return Projects;\n  }\n  newProject() {\n    return createNewProject();\n  }\n  createNewThumb() {\n    return createNewThumb();\n  }\n  createNewContent() {\n    return createNewContent();\n  }\n  getCards() {\n    return cards;\n  }\n  getCardById(id) {\n    return cards.find(card => card.id === id);\n  }\n  getProductConteudo() {\n    return Contents;\n  }\n  getProductVantage() {\n    return Vantage;\n  }\n  getProductLabels() {\n    return ProductLabels;\n  }\n  getProductDetail() {\n    return ProductDetail;\n  }\n  getCertificateHolders() {\n    return certificateHolders;\n  }\n  static #_ = this.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ProductsService };","map":{"version":3,"names":["cards","certificateHolders","Contents","Vantage","ProductLabels","ProductDetail","Projects","createNewProject","createNewThumb","createNewContent","ProductsService","constructor","_httpClient","getProjects","newProject","getCards","getCardById","id","find","card","getProductConteudo","getProductVantage","getProductLabels","getProductDetail","getCertificateHolders","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\admin\\apps\\products\\products.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'; \r\nimport { cards, certificateHolders } from '../../../../mock-api/data/cards-dada';\r\nimport { Contents, Vantage } from '../../../../mock-api/data/product-content';\r\nimport { ProductLabels, ProductDetail } from '../../../../mock-api/data/product-label';\r\nimport { Projects, createNewProject, createNewThumb, createNewContent } from '../../../../mock-api/data/projects';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n    constructor(private _httpClient: HttpClient) {}\r\n\r\n    getProjects() {\r\n        return Projects;\r\n    }\r\n\r\n    newProject() {\r\n        return createNewProject();\r\n    }\r\n\r\n    createNewThumb() {\r\n        return createNewThumb();\r\n    }\r\n\r\n    createNewContent() {\r\n        return createNewContent();\r\n    }\r\n\r\n    getCards() {\r\n        return cards;\r\n    }\r\n\r\n    getCardById(id: string) {\r\n        return cards.find(card => card.id === id);\r\n    }\r\n\r\n    getProductConteudo() {\r\n        return Contents;\r\n    }\r\n\r\n    getProductVantage() {\r\n        return Vantage;\r\n    }\r\n\r\n    getProductLabels() {\r\n        return ProductLabels;\r\n    }\r\n\r\n    getProductDetail() {\r\n        return ProductDetail;\r\n    }\r\n\r\n    getCertificateHolders() {\r\n        return certificateHolders;\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAASA,KAAK,EAAEC,kBAAkB,QAAQ,sCAAsC;AAChF,SAASC,QAAQ,EAAEC,OAAO,QAAQ,2CAA2C;AAC7E,SAASC,aAAa,EAAEC,aAAa,QAAQ,yCAAyC;AACtF,SAASC,QAAQ,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,oCAAoC;;;AAEjH,MAGaC,eAAe;EAExBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAe;EAE9CC,WAAWA,CAAA;IACP,OAAOP,QAAQ;EACnB;EAEAQ,UAAUA,CAAA;IACN,OAAOP,gBAAgB,EAAE;EAC7B;EAEAC,cAAcA,CAAA;IACV,OAAOA,cAAc,EAAE;EAC3B;EAEAC,gBAAgBA,CAAA;IACZ,OAAOA,gBAAgB,EAAE;EAC7B;EAEAM,QAAQA,CAAA;IACJ,OAAOf,KAAK;EAChB;EAEAgB,WAAWA,CAACC,EAAU;IAClB,OAAOjB,KAAK,CAACkB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC7C;EAEAG,kBAAkBA,CAAA;IACd,OAAOlB,QAAQ;EACnB;EAEAmB,iBAAiBA,CAAA;IACb,OAAOlB,OAAO;EAClB;EAEAmB,gBAAgBA,CAAA;IACZ,OAAOlB,aAAa;EACxB;EAEAmB,gBAAgBA,CAAA;IACZ,OAAOlB,aAAa;EACxB;EAEAmB,qBAAqBA,CAAA;IACjB,OAAOvB,kBAAkB;EAC7B;EAAC,QAAAwB,CAAA,G;qBA9CQf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM;;SAETvB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}