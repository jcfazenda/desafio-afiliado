{"ast":null,"code":"import { TRANSLOCO_CONFIG, TRANSLOCO_LOADER, translocoConfig, TranslocoModule, TranslocoService } from '@ngneat/transloco';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { TranslocoHttpLoader } from 'app/core/transloco/transloco.http-loader';\nimport * as i0 from \"@angular/core\";\nclass TranslocoCoreModule {}\nTranslocoCoreModule.ɵfac = function TranslocoCoreModule_Factory(t) {\n  return new (t || TranslocoCoreModule)();\n};\nTranslocoCoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: TranslocoCoreModule\n});\nTranslocoCoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    // Provide the default Transloco configuration\n    provide: TRANSLOCO_CONFIG,\n    useValue: translocoConfig({\n      availableLangs: [{\n        id: 'en',\n        label: 'English'\n      }, {\n        id: 'tr',\n        label: 'Turkish'\n      }],\n      defaultLang: 'en',\n      fallbackLang: 'en',\n      reRenderOnLangChange: true,\n      prodMode: true\n    })\n  }, {\n    // Provide the default Transloco loader\n    provide: TRANSLOCO_LOADER,\n    useClass: TranslocoHttpLoader\n  }, {\n    // Preload the default language before the app starts to prevent empty/jumping content\n    provide: APP_INITIALIZER,\n    deps: [TranslocoService],\n    useFactory: translocoService => () => {\n      const defaultLang = translocoService.getDefaultLang();\n      translocoService.setActiveLang(defaultLang);\n      return translocoService.load(defaultLang).toPromise();\n    },\n    multi: true\n  }],\n  imports: [TranslocoModule]\n});\nexport { TranslocoCoreModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TranslocoCoreModule, {\n    exports: [TranslocoModule]\n  });\n})();","map":{"version":3,"names":["TRANSLOCO_CONFIG","TRANSLOCO_LOADER","translocoConfig","TranslocoModule","TranslocoService","APP_INITIALIZER","TranslocoHttpLoader","TranslocoCoreModule","provide","useValue","availableLangs","id","label","defaultLang","fallbackLang","reRenderOnLangChange","prodMode","useClass","deps","useFactory","translocoService","getDefaultLang","setActiveLang","load","toPromise","multi","imports","exports"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\app\\core\\transloco\\transloco.module.ts"],"sourcesContent":["import { Translation, TRANSLOCO_CONFIG, TRANSLOCO_LOADER, translocoConfig, TranslocoModule, TranslocoService } from '@ngneat/transloco';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\nimport { TranslocoHttpLoader } from 'app/core/transloco/transloco.http-loader';\r\n\r\n@NgModule({\r\n    exports  : [\r\n        TranslocoModule\r\n    ],\r\n    providers: [\r\n        {\r\n            // Provide the default Transloco configuration\r\n            provide : TRANSLOCO_CONFIG,\r\n            useValue: translocoConfig({\r\n                availableLangs      : [\r\n                    {\r\n                        id   : 'en',\r\n                        label: 'English'\r\n                    },\r\n                    {\r\n                        id   : 'tr',\r\n                        label: 'Turkish'\r\n                    }\r\n                ],\r\n                defaultLang         : 'en',\r\n                fallbackLang        : 'en',\r\n                reRenderOnLangChange: true,\r\n                prodMode            : true\r\n            })\r\n        },\r\n        {\r\n            // Provide the default Transloco loader\r\n            provide : TRANSLOCO_LOADER,\r\n            useClass: TranslocoHttpLoader\r\n        },\r\n        {\r\n            // Preload the default language before the app starts to prevent empty/jumping content\r\n            provide   : APP_INITIALIZER,\r\n            deps      : [TranslocoService],\r\n            useFactory: (translocoService: TranslocoService): any => (): Promise<Translation> => {\r\n                const defaultLang = translocoService.getDefaultLang();\r\n                translocoService.setActiveLang(defaultLang);\r\n                return translocoService.load(defaultLang).toPromise();\r\n            },\r\n            multi     : true\r\n        }\r\n    ]\r\n})\r\nexport class TranslocoCoreModule\r\n{\r\n}\r\n"],"mappings":"AAAA,SAAsBA,gBAAgB,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,eAAe,EAAEC,gBAAgB,QAAQ,mBAAmB;AACvI,SAASC,eAAe,QAAkB,eAAe;AACzD,SAASC,mBAAmB,QAAQ,0CAA0C;;AAE9E,MA2CaC,mBAAmB;AAAnBA,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;QAAnBA;AAAmB;AAAnBA,mBAAmB,C;aAvCjB,CACP;IACI;IACAC,OAAO,EAAGR,gBAAgB;IAC1BS,QAAQ,EAAEP,eAAe,CAAC;MACtBQ,cAAc,EAAQ,CAClB;QACIC,EAAE,EAAK,IAAI;QACXC,KAAK,EAAE;OACV,EACD;QACID,EAAE,EAAK,IAAI;QACXC,KAAK,EAAE;OACV,CACJ;MACDC,WAAW,EAAW,IAAI;MAC1BC,YAAY,EAAU,IAAI;MAC1BC,oBAAoB,EAAE,IAAI;MAC1BC,QAAQ,EAAc;KACzB;GACJ,EACD;IACI;IACAR,OAAO,EAAGP,gBAAgB;IAC1BgB,QAAQ,EAAEX;GACb,EACD;IACI;IACAE,OAAO,EAAKH,eAAe;IAC3Ba,IAAI,EAAQ,CAACd,gBAAgB,CAAC;IAC9Be,UAAU,EAAGC,gBAAkC,IAAU,MAA2B;MAChF,MAAMP,WAAW,GAAGO,gBAAgB,CAACC,cAAc,EAAE;MACrDD,gBAAgB,CAACE,aAAa,CAACT,WAAW,CAAC;MAC3C,OAAOO,gBAAgB,CAACG,IAAI,CAACV,WAAW,CAAC,CAACW,SAAS,EAAE;IACzD,CAAC;IACDC,KAAK,EAAO;GACf,CACJ;EAAAC,OAAA,GAvCGvB,eAAe;AAAA;SAyCVI,mBAAmB;;2EAAnBA,mBAAmB;IAAAoB,OAAA,GAzCxBxB,eAAe;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}