{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { animate, style } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/animations\";\nimport * as i2 from \"@fuse/components/drawer/drawer.service\";\nimport * as i3 from \"@fuse/services/utils/utils.service\";\nconst _c0 = [\"*\"];\nclass FuseDrawerComponent {\n  /**\n   * Constructor\n   */\n  constructor(_animationBuilder, _elementRef, _renderer2, _fuseDrawerService, _fuseUtilsService) {\n    this._animationBuilder = _animationBuilder;\n    this._elementRef = _elementRef;\n    this._renderer2 = _renderer2;\n    this._fuseDrawerService = _fuseDrawerService;\n    this._fuseUtilsService = _fuseUtilsService;\n    /* eslint-enable @typescript-eslint/naming-convention */\n    this.fixed = false;\n    this.mode = 'side';\n    this.name = this._fuseUtilsService.randomId();\n    this.opened = false;\n    this.position = 'left';\n    this.transparentOverlay = false;\n    this.fixedChanged = new EventEmitter();\n    this.modeChanged = new EventEmitter();\n    this.openedChanged = new EventEmitter();\n    this.positionChanged = new EventEmitter();\n    this._animationsEnabled = false;\n    this._hovered = false;\n    this._handleOverlayClick = () => {\n      this.close();\n    };\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Host binding for component classes\n   */\n  get classList() {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    return {\n      'fuse-drawer-animations-enabled': this._animationsEnabled,\n      'fuse-drawer-fixed': this.fixed,\n      'fuse-drawer-hover': this._hovered,\n      [`fuse-drawer-mode-${this.mode}`]: true,\n      'fuse-drawer-opened': this.opened,\n      [`fuse-drawer-position-${this.position}`]: true\n    };\n    /* eslint-enable @typescript-eslint/naming-convention */\n  }\n  /**\n   * Host binding for component inline styles\n   */\n  get styleList() {\n    return {\n      'visibility': this.opened ? 'visible' : 'hidden'\n    };\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Decorated methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On mouseenter\n   *\n   * @private\n   */\n  _onMouseenter() {\n    // Enable the animations\n    this._enableAnimations();\n    // Set the hovered\n    this._hovered = true;\n  }\n  /**\n   * On mouseleave\n   *\n   * @private\n   */\n  _onMouseleave() {\n    // Enable the animations\n    this._enableAnimations();\n    // Set the hovered\n    this._hovered = false;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On changes\n   *\n   * @param changes\n   */\n  ngOnChanges(changes) {\n    // Fixed\n    if ('fixed' in changes) {\n      // Coerce the value to a boolean\n      this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\n      // Execute the observable\n      this.fixedChanged.next(this.fixed);\n    }\n    // Mode\n    if ('mode' in changes) {\n      // Get the previous and current values\n      const previousMode = changes.mode.previousValue;\n      const currentMode = changes.mode.currentValue;\n      // Disable the animations\n      this._disableAnimations();\n      // If the mode changes: 'over -> side'\n      if (previousMode === 'over' && currentMode === 'side') {\n        // Hide the overlay\n        this._hideOverlay();\n      }\n      // If the mode changes: 'side -> over'\n      if (previousMode === 'side' && currentMode === 'over') {\n        // If the drawer is opened\n        if (this.opened) {\n          // Show the overlay\n          this._showOverlay();\n        }\n      }\n      // Execute the observable\n      this.modeChanged.next(currentMode);\n      // Enable the animations after a delay\n      // The delay must be bigger than the current transition-duration\n      // to make sure nothing will be animated while the mode is changing\n      setTimeout(() => {\n        this._enableAnimations();\n      }, 500);\n    }\n    // Opened\n    if ('opened' in changes) {\n      // Coerce the value to a boolean\n      const open = coerceBooleanProperty(changes.opened.currentValue);\n      // Open/close the drawer\n      this._toggleOpened(open);\n    }\n    // Position\n    if ('position' in changes) {\n      // Execute the observable\n      this.positionChanged.next(this.position);\n    }\n    // Transparent overlay\n    if ('transparentOverlay' in changes) {\n      // Coerce the value to a boolean\n      this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\n    }\n  }\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Register the drawer\n    this._fuseDrawerService.registerComponent(this.name, this);\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Finish the animation\n    if (this._player) {\n      this._player.finish();\n    }\n    // Deregister the drawer from the registry\n    this._fuseDrawerService.deregisterComponent(this.name);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Open the drawer\n   */\n  open() {\n    // Return if the drawer has already opened\n    if (this.opened) {\n      return;\n    }\n    // Open the drawer\n    this._toggleOpened(true);\n  }\n  /**\n   * Close the drawer\n   */\n  close() {\n    // Return if the drawer has already closed\n    if (!this.opened) {\n      return;\n    }\n    // Close the drawer\n    this._toggleOpened(false);\n  }\n  /**\n   * Toggle the drawer\n   */\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Enable the animations\n   *\n   * @private\n   */\n  _enableAnimations() {\n    // Return if the animations are already enabled\n    if (this._animationsEnabled) {\n      return;\n    }\n    // Enable the animations\n    this._animationsEnabled = true;\n  }\n  /**\n   * Disable the animations\n   *\n   * @private\n   */\n  _disableAnimations() {\n    // Return if the animations are already disabled\n    if (!this._animationsEnabled) {\n      return;\n    }\n    // Disable the animations\n    this._animationsEnabled = false;\n  }\n  /**\n   * Show the backdrop\n   *\n   * @private\n   */\n  _showOverlay() {\n    // Create the backdrop element\n    this._overlay = this._renderer2.createElement('div');\n    // Add a class to the backdrop element\n    this._overlay.classList.add('fuse-drawer-overlay');\n    // Add a class depending on the fixed option\n    if (this.fixed) {\n      this._overlay.classList.add('fuse-drawer-overlay-fixed');\n    }\n    // Add a class depending on the transparentOverlay option\n    if (this.transparentOverlay) {\n      this._overlay.classList.add('fuse-drawer-overlay-transparent');\n    }\n    // Append the backdrop to the parent of the drawer\n    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\n    // Create enter animation and attach it to the player\n    this._player = this._animationBuilder.build([style({\n      opacity: 0\n    }), animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n      opacity: 1\n    }))]).create(this._overlay);\n    // Play the animation\n    this._player.play();\n    // Add an event listener to the overlay\n    this._overlay.addEventListener('click', this._handleOverlayClick);\n  }\n  /**\n   * Hide the backdrop\n   *\n   * @private\n   */\n  _hideOverlay() {\n    if (!this._overlay) {\n      return;\n    }\n    // Create the leave animation and attach it to the player\n    this._player = this._animationBuilder.build([animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n      opacity: 0\n    }))]).create(this._overlay);\n    // Play the animation\n    this._player.play();\n    // Once the animation is done...\n    this._player.onDone(() => {\n      // If the overlay still exists...\n      if (this._overlay) {\n        // Remove the event listener\n        this._overlay.removeEventListener('click', this._handleOverlayClick);\n        // Remove the overlay\n        this._overlay.parentNode.removeChild(this._overlay);\n        this._overlay = null;\n      }\n    });\n  }\n  /**\n   * Open/close the drawer\n   *\n   * @param open\n   * @private\n   */\n  _toggleOpened(open) {\n    // Set the opened\n    this.opened = open;\n    // Enable the animations\n    this._enableAnimations();\n    // If the mode is 'over'\n    if (this.mode === 'over') {\n      // If the drawer opens, show the overlay\n      if (open) {\n        this._showOverlay();\n      }\n      // Otherwise, close the overlay\n      else {\n        this._hideOverlay();\n      }\n    }\n    // Execute the observable\n    this.openedChanged.next(open);\n  }\n}\nFuseDrawerComponent.ɵfac = function FuseDrawerComponent_Factory(t) {\n  return new (t || FuseDrawerComponent)(i0.ɵɵdirectiveInject(i1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.FuseDrawerService), i0.ɵɵdirectiveInject(i3.FuseUtilsService));\n};\nFuseDrawerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FuseDrawerComponent,\n  selectors: [[\"fuse-drawer\"]],\n  hostVars: 4,\n  hostBindings: function FuseDrawerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mouseenter\", function FuseDrawerComponent_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"mouseleave\", function FuseDrawerComponent_mouseleave_HostBindingHandler() {\n        return ctx._onMouseleave();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleMap(ctx.styleList);\n      i0.ɵɵclassMap(ctx.classList);\n    }\n  },\n  inputs: {\n    fixed: \"fixed\",\n    mode: \"mode\",\n    name: \"name\",\n    opened: \"opened\",\n    position: \"position\",\n    transparentOverlay: \"transparentOverlay\"\n  },\n  outputs: {\n    fixedChanged: \"fixedChanged\",\n    modeChanged: \"modeChanged\",\n    openedChanged: \"openedChanged\",\n    positionChanged: \"positionChanged\"\n  },\n  exportAs: [\"fuseDrawer\"],\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"fuse-drawer-content\"]],\n  template: function FuseDrawerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/* Variables */\\n:root {\\n  --fuse-drawer-width: 320px;\\n}\\n\\nfuse-drawer {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 auto;\\n  width: var(--fuse-drawer-width);\\n  min-width: var(--fuse-drawer-width);\\n  max-width: var(--fuse-drawer-width);\\n  z-index: 300;\\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.35);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\\n  /* Animations */\\n  /* Over mode */\\n  /* Left position */\\n  /* Right position */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-animations-enabled {\\n  transition-duration: 400ms;\\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition-property: visibility, margin-left, margin-right, transform, width, max-width, min-width;\\n}\\nfuse-drawer.fuse-drawer-animations-enabled .fuse-drawer-content {\\n  transition-duration: 400ms;\\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition-property: width, max-width, min-width;\\n}\\nfuse-drawer.fuse-drawer-mode-over {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  /* Fixed mode */\\n}\\nfuse-drawer.fuse-drawer-mode-over.fuse-drawer-fixed {\\n  position: fixed;\\n}\\nfuse-drawer.fuse-drawer-position-left {\\n  /* Side mode */\\n  /* Over mode */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side {\\n  margin-left: calc(var(--fuse-drawer-width) * -1);\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side.fuse-drawer-opened {\\n  margin-left: 0;\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over {\\n  left: 0;\\n  transform: translate3d(-100%, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over.fuse-drawer-opened {\\n  transform: translate3d(0, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-left .fuse-drawer-content {\\n  left: 0;\\n}\\nfuse-drawer.fuse-drawer-position-right {\\n  /* Side mode */\\n  /* Over mode */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side {\\n  margin-right: calc(var(--fuse-drawer-width) * -1);\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side.fuse-drawer-opened {\\n  margin-right: 0;\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over {\\n  right: 0;\\n  transform: translate3d(100%, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over.fuse-drawer-opened {\\n  transform: translate3d(0, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-right .fuse-drawer-content {\\n  right: 0;\\n}\\nfuse-drawer .fuse-drawer-content {\\n  position: absolute;\\n  display: flex;\\n  flex: 1 1 auto;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\\n}\\n\\n/* Overlay */\\n.fuse-drawer-overlay {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 299;\\n  opacity: 1;\\n  background-color: rgba(0, 0, 0, 0.6);\\n  /* Fixed mode */\\n  /* Transparent overlay */\\n}\\n.fuse-drawer-overlay.fuse-drawer-overlay-fixed {\\n  position: fixed;\\n}\\n.fuse-drawer-overlay.fuse-drawer-overlay-transparent {\\n  background-color: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"],\n  encapsulation: 2\n});\nexport { FuseDrawerComponent };","map":{"version":3,"names":["EventEmitter","animate","style","coerceBooleanProperty","FuseDrawerComponent","constructor","_animationBuilder","_elementRef","_renderer2","_fuseDrawerService","_fuseUtilsService","fixed","mode","name","randomId","opened","position","transparentOverlay","fixedChanged","modeChanged","openedChanged","positionChanged","_animationsEnabled","_hovered","_handleOverlayClick","close","classList","styleList","_onMouseenter","_enableAnimations","_onMouseleave","ngOnChanges","changes","currentValue","next","previousMode","previousValue","currentMode","_disableAnimations","_hideOverlay","_showOverlay","setTimeout","open","_toggleOpened","ngOnInit","registerComponent","ngOnDestroy","_player","finish","deregisterComponent","toggle","_overlay","createElement","add","appendChild","nativeElement","parentElement","build","opacity","create","play","addEventListener","onDone","removeEventListener","parentNode","removeChild","i0","ɵɵdirectiveInject","i1","AnimationBuilder","ElementRef","Renderer2","i2","FuseDrawerService","i3","FuseUtilsService","selectors","hostVars","hostBindings","FuseDrawerComponent_HostBindings","rf","ctx","FuseDrawerComponent_mouseleave_HostBindingHandler","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd"],"sources":["C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\@fuse\\components\\drawer\\drawer.component.ts","C:\\Users\\jcfaz\\OneDrive\\Área de Trabalho\\projects\\payments\\iso\\src\\@fuse\\components\\drawer\\drawer.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\r\nimport { FuseDrawerMode, FuseDrawerPosition } from '@fuse/components/drawer/drawer.types';\r\nimport { FuseDrawerService } from '@fuse/components/drawer/drawer.service';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector     : 'fuse-drawer',\r\n    templateUrl  : './drawer.component.html',\r\n    styleUrls    : ['./drawer.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs     : 'fuseDrawer'\r\n})\r\nexport class FuseDrawerComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_fixed: BooleanInput;\r\n    static ngAcceptInputType_opened: BooleanInput;\r\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() fixed: boolean = false;\r\n    @Input() mode: FuseDrawerMode = 'side';\r\n    @Input() name: string = this._fuseUtilsService.randomId();\r\n    @Input() opened: boolean = false;\r\n    @Input() position: FuseDrawerPosition = 'left';\r\n    @Input() transparentOverlay: boolean = false;\r\n    @Output() readonly fixedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() readonly modeChanged: EventEmitter<FuseDrawerMode> = new EventEmitter<FuseDrawerMode>();\r\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() readonly positionChanged: EventEmitter<FuseDrawerPosition> = new EventEmitter<FuseDrawerPosition>();\r\n\r\n    private _animationsEnabled: boolean = false;\r\n    private readonly _handleOverlayClick: any;\r\n    private _hovered: boolean = false;\r\n    private _overlay: HTMLElement;\r\n    private _player: AnimationPlayer;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _animationBuilder: AnimationBuilder,\r\n        private _elementRef: ElementRef,\r\n        private _renderer2: Renderer2,\r\n        private _fuseDrawerService: FuseDrawerService,\r\n        private _fuseUtilsService: FuseUtilsService\r\n    )\r\n    {\r\n        this._handleOverlayClick = (): void => {\r\n            this.close();\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Host binding for component classes\r\n     */\r\n    @HostBinding('class') get classList(): any\r\n    {\r\n        /* eslint-disable @typescript-eslint/naming-convention */\r\n        return {\r\n            'fuse-drawer-animations-enabled'         : this._animationsEnabled,\r\n            'fuse-drawer-fixed'                      : this.fixed,\r\n            'fuse-drawer-hover'                      : this._hovered,\r\n            [`fuse-drawer-mode-${this.mode}`]        : true,\r\n            'fuse-drawer-opened'                     : this.opened,\r\n            [`fuse-drawer-position-${this.position}`]: true\r\n        };\r\n        /* eslint-enable @typescript-eslint/naming-convention */\r\n    }\r\n\r\n    /**\r\n     * Host binding for component inline styles\r\n     */\r\n    @HostBinding('style') get styleList(): any\r\n    {\r\n        return {\r\n            'visibility': this.opened ? 'visible' : 'hidden'\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Decorated methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On mouseenter\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseenter')\r\n    private _onMouseenter(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = true;\r\n    }\r\n\r\n    /**\r\n     * On mouseleave\r\n     *\r\n     * @private\r\n     */\r\n    @HostListener('mouseleave')\r\n    private _onMouseleave(): void\r\n    {\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // Set the hovered\r\n        this._hovered = false;\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Fixed\r\n        if ( 'fixed' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\r\n\r\n            // Execute the observable\r\n            this.fixedChanged.next(this.fixed);\r\n        }\r\n\r\n        // Mode\r\n        if ( 'mode' in changes )\r\n        {\r\n            // Get the previous and current values\r\n            const previousMode = changes.mode.previousValue;\r\n            const currentMode = changes.mode.currentValue;\r\n\r\n            // Disable the animations\r\n            this._disableAnimations();\r\n\r\n            // If the mode changes: 'over -> side'\r\n            if ( previousMode === 'over' && currentMode === 'side' )\r\n            {\r\n                // Hide the overlay\r\n                this._hideOverlay();\r\n            }\r\n\r\n            // If the mode changes: 'side -> over'\r\n            if ( previousMode === 'side' && currentMode === 'over' )\r\n            {\r\n                // If the drawer is opened\r\n                if ( this.opened )\r\n                {\r\n                    // Show the overlay\r\n                    this._showOverlay();\r\n                }\r\n            }\r\n\r\n            // Execute the observable\r\n            this.modeChanged.next(currentMode);\r\n\r\n            // Enable the animations after a delay\r\n            // The delay must be bigger than the current transition-duration\r\n            // to make sure nothing will be animated while the mode is changing\r\n            setTimeout(() => {\r\n                this._enableAnimations();\r\n            }, 500);\r\n        }\r\n\r\n        // Opened\r\n        if ( 'opened' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            const open = coerceBooleanProperty(changes.opened.currentValue);\r\n\r\n            // Open/close the drawer\r\n            this._toggleOpened(open);\r\n        }\r\n\r\n        // Position\r\n        if ( 'position' in changes )\r\n        {\r\n            // Execute the observable\r\n            this.positionChanged.next(this.position);\r\n        }\r\n\r\n        // Transparent overlay\r\n        if ( 'transparentOverlay' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Register the drawer\r\n        this._fuseDrawerService.registerComponent(this.name, this);\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Finish the animation\r\n        if ( this._player )\r\n        {\r\n            this._player.finish();\r\n        }\r\n\r\n        // Deregister the drawer from the registry\r\n        this._fuseDrawerService.deregisterComponent(this.name);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Open the drawer\r\n     */\r\n    open(): void\r\n    {\r\n        // Return if the drawer has already opened\r\n        if ( this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Open the drawer\r\n        this._toggleOpened(true);\r\n    }\r\n\r\n    /**\r\n     * Close the drawer\r\n     */\r\n    close(): void\r\n    {\r\n        // Return if the drawer has already closed\r\n        if ( !this.opened )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Close the drawer\r\n        this._toggleOpened(false);\r\n    }\r\n\r\n    /**\r\n     * Toggle the drawer\r\n     */\r\n    toggle(): void\r\n    {\r\n        if ( this.opened )\r\n        {\r\n            this.close();\r\n        }\r\n        else\r\n        {\r\n            this.open();\r\n        }\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Enable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _enableAnimations(): void\r\n    {\r\n        // Return if the animations are already enabled\r\n        if ( this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Enable the animations\r\n        this._animationsEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * Disable the animations\r\n     *\r\n     * @private\r\n     */\r\n    private _disableAnimations(): void\r\n    {\r\n        // Return if the animations are already disabled\r\n        if ( !this._animationsEnabled )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Disable the animations\r\n        this._animationsEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * Show the backdrop\r\n     *\r\n     * @private\r\n     */\r\n    private _showOverlay(): void\r\n    {\r\n        // Create the backdrop element\r\n        this._overlay = this._renderer2.createElement('div');\r\n\r\n        // Add a class to the backdrop element\r\n        this._overlay.classList.add('fuse-drawer-overlay');\r\n\r\n        // Add a class depending on the fixed option\r\n        if ( this.fixed )\r\n        {\r\n            this._overlay.classList.add('fuse-drawer-overlay-fixed');\r\n        }\r\n\r\n        // Add a class depending on the transparentOverlay option\r\n        if ( this.transparentOverlay )\r\n        {\r\n            this._overlay.classList.add('fuse-drawer-overlay-transparent');\r\n        }\r\n\r\n        // Append the backdrop to the parent of the drawer\r\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\r\n\r\n        // Create enter animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            style({opacity: 0}),\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Add an event listener to the overlay\r\n        this._overlay.addEventListener('click', this._handleOverlayClick);\r\n    }\r\n\r\n    /**\r\n     * Hide the backdrop\r\n     *\r\n     * @private\r\n     */\r\n    private _hideOverlay(): void\r\n    {\r\n        if ( !this._overlay )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Create the leave animation and attach it to the player\r\n        this._player = this._animationBuilder.build([\r\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0}))\r\n        ]).create(this._overlay);\r\n\r\n        // Play the animation\r\n        this._player.play();\r\n\r\n        // Once the animation is done...\r\n        this._player.onDone(() => {\r\n\r\n            // If the overlay still exists...\r\n            if ( this._overlay )\r\n            {\r\n                // Remove the event listener\r\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\r\n\r\n                // Remove the overlay\r\n                this._overlay.parentNode.removeChild(this._overlay);\r\n                this._overlay = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open/close the drawer\r\n     *\r\n     * @param open\r\n     * @private\r\n     */\r\n    private _toggleOpened(open: boolean): void\r\n    {\r\n        // Set the opened\r\n        this.opened = open;\r\n\r\n        // Enable the animations\r\n        this._enableAnimations();\r\n\r\n        // If the mode is 'over'\r\n        if ( this.mode === 'over' )\r\n        {\r\n            // If the drawer opens, show the overlay\r\n            if ( open )\r\n            {\r\n                this._showOverlay();\r\n            }\r\n            // Otherwise, close the overlay\r\n            else\r\n            {\r\n                this._hideOverlay();\r\n            }\r\n        }\r\n\r\n        // Execute the observable\r\n        this.openedChanged.next(open);\r\n    }\r\n}\r\n","<div class=\"fuse-drawer-content\">\r\n    <ng-content></ng-content>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}