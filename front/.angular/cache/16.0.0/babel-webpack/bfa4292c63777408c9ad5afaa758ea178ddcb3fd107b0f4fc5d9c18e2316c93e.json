{"ast":null,"code":"import { ReplaySubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass NavigationService {\n  /**\n   * Constructor\n   */\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this._navigation = new ReplaySubject(1);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for navigation\n   */\n  get navigation$() {\n    return this._navigation.asObservable();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Get all navigation data\n   */\n  get() {\n    return this._httpClient.get('api/common/navigation').pipe(tap(navigation => {\n      this._navigation.next(navigation);\n    }));\n  }\n  static #_ = this.ɵfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavigationService,\n    factory: NavigationService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { NavigationService };","map":{"version":3,"names":["ReplaySubject","tap","NavigationService","constructor","_httpClient","_navigation","navigation$","asObservable","get","pipe","navigation","next","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\core\\navigation\\navigation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, tap } from 'rxjs';\r\nimport { Navigation } from 'app/core/navigation/navigation.types';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NavigationService\r\n{\r\n    private _navigation: ReplaySubject<Navigation> = new ReplaySubject<Navigation>(1);\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(private _httpClient: HttpClient)\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for navigation\r\n     */\r\n    get navigation$(): Observable<Navigation>\r\n    {\r\n        return this._navigation.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get all navigation data\r\n     */\r\n    get(): Observable<Navigation>\r\n    {\r\n        return this._httpClient.get<Navigation>('api/common/navigation').pipe(\r\n            tap((navigation) => {\r\n                this._navigation.next(navigation);\r\n            })\r\n        );\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAAqBA,aAAa,EAAEC,GAAG,QAAQ,MAAM;;;AAGrD,MAGaC,iBAAiB;EAI1B;;;EAGAC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IALvB,KAAAC,WAAW,GAA8B,IAAIL,aAAa,CAAa,CAAC,CAAC;EAOjF;EAEA;EACA;EACA;EAEA;;;EAGA,IAAIM,WAAWA,CAAA;IAEX,OAAO,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;EAC1C;EAEA;EACA;EACA;EAEA;;;EAGAC,GAAGA,CAAA;IAEC,OAAO,IAAI,CAACJ,WAAW,CAACI,GAAG,CAAa,uBAAuB,CAAC,CAACC,IAAI,CACjER,GAAG,CAAES,UAAU,IAAI;MACf,IAAI,CAACL,WAAW,CAACM,IAAI,CAACD,UAAU,CAAC;IACrC,CAAC,CAAC,CACL;EACL;EAAC,QAAAE,CAAA,G;qBArCQV,iBAAiB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBf,iBAAiB;IAAAgB,OAAA,EAAjBhB,iBAAiB,CAAAiB,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAETlB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}