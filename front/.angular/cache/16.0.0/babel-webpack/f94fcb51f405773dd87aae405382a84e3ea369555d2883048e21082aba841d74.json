{"ast":null,"code":"import { PopUpTestComponent } from './popup-test.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nclass PopupTestService {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  openPopup(configuration) {\n    this.dialog.open(PopUpTestComponent, {\n      data: {\n        configuration\n      },\n      width: '1570px',\n      height: '1390px'\n    });\n  }\n  static #_ = this.ɵfac = function PopupTestService_Factory(t) {\n    return new (t || PopupTestService)(i0.ɵɵinject(i1.MatDialog));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PopupTestService,\n    factory: PopupTestService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PopupTestService };","map":{"version":3,"names":["PopUpTestComponent","PopupTestService","constructor","dialog","openPopup","configuration","open","data","width","height","_","i0","ɵɵinject","i1","MatDialog","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\admin\\apps\\contacts\\popup-test\\popup-test.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog'; \r\nimport { PopUpTestComponent } from './popup-test.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PopupTestService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  openPopup(configuration: any): void { \r\n\r\n      this.dialog.open(PopUpTestComponent, {\r\n\r\n        data: { configuration },\r\n        width: '1570px',\r\n        height: '1390px', \r\n      \r\n      });\r\n\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,wBAAwB;;;AAE3D,MAGaC,gBAAgB;EAC3BC,YAAoBC,MAAiB;IAAjB,KAAAA,MAAM,GAANA,MAAM;EAAc;EAExCC,SAASA,CAACC,aAAkB;IAExB,IAAI,CAACF,MAAM,CAACG,IAAI,CAACN,kBAAkB,EAAE;MAEnCO,IAAI,EAAE;QAAEF;MAAa,CAAE;MACvBG,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE;KAET,CAAC;EAEN;EAAC,QAAAC,CAAA,G;qBAbUT,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;IAAAC,UAAA,EAFf;EAAM;;SAEPjB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}