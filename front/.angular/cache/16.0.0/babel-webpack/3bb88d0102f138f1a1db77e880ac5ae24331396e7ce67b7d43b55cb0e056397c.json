{"ast":null,"code":"import { SecurityContext, TemplateRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@fuse/components/highlight/highlight.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"fuse-highlight\", \"\"];\nfunction FuseHighlightComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"pre\", 1);\n    i0.ɵɵelement(2, \"code\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const highlightedCode_r1 = ctx.highlightedCode;\n    const lang_r2 = ctx.lang;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", \"language-\" + lang_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", \"language-\" + lang_r2)(\"innerHTML\", highlightedCode_r1, i0.ɵɵsanitizeHtml);\n  }\n}\nconst _c1 = [\"*\"];\nclass FuseHighlightComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _domSanitizer, _elementRef, _renderer2, _fuseHighlightService, _viewContainerRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._domSanitizer = _domSanitizer;\n    this._elementRef = _elementRef;\n    this._renderer2 = _renderer2;\n    this._fuseHighlightService = _fuseHighlightService;\n    this._viewContainerRef = _viewContainerRef;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On changes\n   *\n   * @param changes\n   */\n  ngOnChanges(changes) {\n    // Code & Lang\n    if ('code' in changes || 'lang' in changes) {\n      // Return if the viewContainerRef is not available\n      if (!this._viewContainerRef.length) {\n        return;\n      }\n      // Highlight and insert the code\n      this._highlightAndInsert();\n    }\n  }\n  /**\n   * After view init\n   */\n  ngAfterViewInit() {\n    // Return if there is no language set\n    if (!this.lang) {\n      return;\n    }\n    // If there is no code input, get the code from\n    // the textarea\n    if (!this.code) {\n      // Get the code\n      this.code = this._elementRef.nativeElement.value;\n    }\n    // Highlight and insert\n    this._highlightAndInsert();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Highlight and insert the highlighted code\n   *\n   * @private\n   */\n  _highlightAndInsert() {\n    // Return if the template reference is not available\n    if (!this.templateRef) {\n      return;\n    }\n    // Return if the code or language is not defined\n    if (!this.code || !this.lang) {\n      return;\n    }\n    // Destroy the component if there is already one\n    if (this._viewRef) {\n      this._viewRef.destroy();\n      this._viewRef = null;\n    }\n    // Highlight and sanitize the code just in case\n    this.highlightedCode = this._domSanitizer.sanitize(SecurityContext.HTML, this._fuseHighlightService.highlight(this.code, this.lang));\n    // Return if the highlighted code is null\n    if (this.highlightedCode === null) {\n      return;\n    }\n    // Render and insert the template\n    this._viewRef = this._viewContainerRef.createEmbeddedView(this.templateRef, {\n      highlightedCode: this.highlightedCode,\n      lang: this.lang\n    });\n    // Detect the changes\n    this._viewRef.detectChanges();\n  }\n  static #_ = this.ɵfac = function FuseHighlightComponent_Factory(t) {\n    return new (t || FuseHighlightComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.FuseHighlightService), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FuseHighlightComponent,\n    selectors: [[\"textarea\", \"fuse-highlight\", \"\"]],\n    viewQuery: function FuseHighlightComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TemplateRef, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n      }\n    },\n    inputs: {\n      code: \"code\",\n      lang: \"lang\"\n    },\n    exportAs: [\"fuseHighlight\"],\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"fuse-highlight\", \"fuse-highlight-code-container\"], [3, \"ngClass\"], [3, \"ngClass\", \"innerHTML\"]],\n    template: function FuseHighlightComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, FuseHighlightComponent_ng_template_1_Template, 3, 3, \"ng-template\");\n      }\n    },\n    dependencies: [i3.NgClass],\n    styles: [\"textarea[fuse-highlight] {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9AZnVzZS9jb21wb25lbnRzL2hpZ2hsaWdodC9oaWdobGlnaHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZXh0YXJlYVtmdXNlLWhpZ2hsaWdodF0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\nexport { FuseHighlightComponent };","map":{"version":3,"names":["SecurityContext","TemplateRef","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","lang_r2","highlightedCode_r1","ɵɵsanitizeHtml","FuseHighlightComponent","constructor","_changeDetectorRef","_domSanitizer","_elementRef","_renderer2","_fuseHighlightService","_viewContainerRef","ngOnChanges","changes","length","_highlightAndInsert","ngAfterViewInit","lang","code","nativeElement","value","templateRef","_viewRef","destroy","highlightedCode","sanitize","HTML","highlight","createEmbeddedView","detectChanges","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","DomSanitizer","ElementRef","Renderer2","i2","FuseHighlightService","ViewContainerRef","_2","selectors","viewQuery","FuseHighlightComponent_Query","rf","ctx","ɵɵprojection","ɵɵtemplate","FuseHighlightComponent_ng_template_1_Template"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\@fuse\\components\\highlight\\highlight.component.ts","C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\@fuse\\components\\highlight\\highlight.component.html"],"sourcesContent":["import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EmbeddedViewRef, Input, OnChanges, Renderer2, SecurityContext, SimpleChanges, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FuseHighlightService } from '@fuse/components/highlight/highlight.service';\r\n\r\n@Component({\r\n    selector       : 'textarea[fuse-highlight]',\r\n    templateUrl    : './highlight.component.html',\r\n    styleUrls      : ['./highlight.component.scss'],\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    exportAs       : 'fuseHighlight'\r\n})\r\nexport class FuseHighlightComponent implements OnChanges, AfterViewInit\r\n{\r\n    @Input() code: string;\r\n    @Input() lang: string;\r\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n    highlightedCode: string;\r\n    private _viewRef: EmbeddedViewRef<any>;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _domSanitizer: DomSanitizer,\r\n        private _elementRef: ElementRef,\r\n        private _renderer2: Renderer2,\r\n        private _fuseHighlightService: FuseHighlightService,\r\n        private _viewContainerRef: ViewContainerRef\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Code & Lang\r\n        if ( 'code' in changes || 'lang' in changes )\r\n        {\r\n            // Return if the viewContainerRef is not available\r\n            if ( !this._viewContainerRef.length )\r\n            {\r\n                return;\r\n            }\r\n\r\n            // Highlight and insert the code\r\n            this._highlightAndInsert();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After view init\r\n     */\r\n    ngAfterViewInit(): void\r\n    {\r\n        // Return if there is no language set\r\n        if ( !this.lang )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // If there is no code input, get the code from\r\n        // the textarea\r\n        if ( !this.code )\r\n        {\r\n            // Get the code\r\n            this.code = this._elementRef.nativeElement.value;\r\n        }\r\n\r\n        // Highlight and insert\r\n        this._highlightAndInsert();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Highlight and insert the highlighted code\r\n     *\r\n     * @private\r\n     */\r\n    private _highlightAndInsert(): void\r\n    {\r\n        // Return if the template reference is not available\r\n        if ( !this.templateRef )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Return if the code or language is not defined\r\n        if ( !this.code || !this.lang )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Destroy the component if there is already one\r\n        if ( this._viewRef )\r\n        {\r\n            this._viewRef.destroy();\r\n            this._viewRef = null;\r\n        }\r\n\r\n        // Highlight and sanitize the code just in case\r\n        this.highlightedCode = this._domSanitizer.sanitize(SecurityContext.HTML, this._fuseHighlightService.highlight(this.code, this.lang));\r\n\r\n        // Return if the highlighted code is null\r\n        if ( this.highlightedCode === null )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Render and insert the template\r\n        this._viewRef = this._viewContainerRef.createEmbeddedView(this.templateRef, {\r\n            highlightedCode: this.highlightedCode,\r\n            lang           : this.lang\r\n        });\r\n\r\n        // Detect the changes\r\n        this._viewRef.detectChanges();\r\n    }\r\n}\r\n","<ng-content></ng-content>\r\n\r\n<!-- @formatter:off -->\r\n<ng-template let-highlightedCode=\"highlightedCode\" let-lang=\"lang\">\r\n<div class=\"fuse-highlight fuse-highlight-code-container\">\r\n<pre [ngClass]=\"'language-' + lang\"><code [ngClass]=\"'language-' + lang\" [innerHTML]=\"highlightedCode\"></code></pre>\r\n</div>\r\n</ng-template>\r\n<!-- @formatter:on -->\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}