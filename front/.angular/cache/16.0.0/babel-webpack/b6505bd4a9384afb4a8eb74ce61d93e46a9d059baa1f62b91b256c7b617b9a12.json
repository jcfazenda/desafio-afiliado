{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass FuseAlertService {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this._onDismiss = new ReplaySubject(1);\n    this._onShow = new ReplaySubject(1);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for onDismiss\n   */\n  get onDismiss() {\n    return this._onDismiss.asObservable();\n  }\n  /**\n   * Getter for onShow\n   */\n  get onShow() {\n    return this._onShow.asObservable();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Dismiss the alert\n   *\n   * @param name\n   */\n  dismiss(name) {\n    // Return if the name is not provided\n    if (!name) {\n      return;\n    }\n    // Execute the observable\n    this._onDismiss.next(name);\n  }\n  /**\n   * Show the dismissed alert\n   *\n   * @param name\n   */\n  show(name) {\n    // Return if the name is not provided\n    if (!name) {\n      return;\n    }\n    // Execute the observable\n    this._onShow.next(name);\n  }\n  static #_ = this.ɵfac = function FuseAlertService_Factory(t) {\n    return new (t || FuseAlertService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuseAlertService,\n    factory: FuseAlertService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { FuseAlertService };","map":{"version":3,"names":["ReplaySubject","FuseAlertService","constructor","_onDismiss","_onShow","onDismiss","asObservable","onShow","dismiss","name","next","show","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\@fuse\\components\\alert\\alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseAlertService\r\n{\r\n    private readonly _onDismiss: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n    private readonly _onShow: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for onDismiss\r\n     */\r\n    get onDismiss(): Observable<any>\r\n    {\r\n        return this._onDismiss.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Getter for onShow\r\n     */\r\n    get onShow(): Observable<any>\r\n    {\r\n        return this._onShow.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Dismiss the alert\r\n     *\r\n     * @param name\r\n     */\r\n    dismiss(name: string): void\r\n    {\r\n        // Return if the name is not provided\r\n        if ( !name )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Execute the observable\r\n        this._onDismiss.next(name);\r\n    }\r\n\r\n    /**\r\n     * Show the dismissed alert\r\n     *\r\n     * @param name\r\n     */\r\n    show(name: string): void\r\n    {\r\n        // Return if the name is not provided\r\n        if ( !name )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Execute the observable\r\n        this._onShow.next(name);\r\n    }\r\n\r\n}\r\n"],"mappings":"AACA,SAAqBA,aAAa,QAAQ,MAAM;;AAEhD,MAGaC,gBAAgB;EAKzB;;;EAGAC,YAAA;IANiB,KAAAC,UAAU,GAA0B,IAAIH,aAAa,CAAS,CAAC,CAAC;IAChE,KAAAI,OAAO,GAA0B,IAAIJ,aAAa,CAAS,CAAC,CAAC;EAO9E;EAEA;EACA;EACA;EAEA;;;EAGA,IAAIK,SAASA,CAAA;IAET,OAAO,IAAI,CAACF,UAAU,CAACG,YAAY,EAAE;EACzC;EAEA;;;EAGA,IAAIC,MAAMA,CAAA;IAEN,OAAO,IAAI,CAACH,OAAO,CAACE,YAAY,EAAE;EACtC;EAEA;EACA;EACA;EAEA;;;;;EAKAE,OAAOA,CAACC,IAAY;IAEhB;IACA,IAAK,CAACA,IAAI,EACV;MACI;;IAGJ;IACA,IAAI,CAACN,UAAU,CAACO,IAAI,CAACD,IAAI,CAAC;EAC9B;EAEA;;;;;EAKAE,IAAIA,CAACF,IAAY;IAEb;IACA,IAAK,CAACA,IAAI,EACV;MACI;;IAGJ;IACA,IAAI,CAACL,OAAO,CAACM,IAAI,CAACD,IAAI,CAAC;EAC3B;EAAC,QAAAG,CAAA,G;qBApEQX,gBAAgB;EAAA;EAAA,QAAAY,EAAA,G;WAAhBZ,gBAAgB;IAAAa,OAAA,EAAhBb,gBAAgB,CAAAc,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAETf,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}