{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass StorageService {\n  constructor() {}\n  resetUser(user) {\n    const user_string = JSON.stringify(user);\n    localStorage.setItem('currentUser', user_string);\n    localStorage.setItem('email', 'iso-parametrizador@giso.com');\n    localStorage.setItem('name', 'Julio Fazenda');\n    localStorage.setItem('avatar', '');\n  }\n  setUser(user) {\n    const user_string = JSON.stringify(user);\n    localStorage.setItem('currentUser', user_string);\n    localStorage.setItem('email', user.email.toString());\n    localStorage.setItem('name', user.name.toString());\n    localStorage.setItem('avatar', user.avatar === null ? '' : user.avatar.toString());\n  }\n  logoutUser() {\n    localStorage.removeItem('accessDatabase');\n    localStorage.removeItem('currentUser');\n  }\n  static #_ = this.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { StorageService };","map":{"version":3,"names":["StorageService","constructor","resetUser","user","user_string","JSON","stringify","localStorage","setItem","setUser","email","toString","name","avatar","logoutUser","removeItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\auth\\api-authenticate\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';  \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService { \r\n\r\n  constructor( ) { \r\n  } \r\n\r\n  resetUser(user: any): void {\r\n  \r\n    const user_string = JSON.stringify(user);\r\n    localStorage.setItem('currentUser', user_string); \r\n\r\n    localStorage.setItem('email',   'iso-parametrizador@giso.com');\r\n    localStorage.setItem('name',    'Julio Fazenda');\r\n    localStorage.setItem('avatar',  '');  \r\n  } \r\n\r\n  setUser(user: any): void {\r\n  \r\n    const user_string = JSON.stringify(user);\r\n    localStorage.setItem('currentUser', user_string); \r\n\r\n    localStorage.setItem('email',   user.email.toString());\r\n    localStorage.setItem('name',   user.name.toString());\r\n    localStorage.setItem('avatar', user.avatar === null ? '' : user.avatar.toString());  \r\n  }  \r\n \r\n  logoutUser(): any {\r\n \r\n    localStorage.removeItem('accessDatabase');\r\n    localStorage.removeItem('currentUser');  \r\n    \r\n  } \r\n \r\n}\r\n"],"mappings":";AAEA,MAGaA,cAAc;EAEzBC,YAAA,GACA;EAEAC,SAASA,CAACC,IAAS;IAEjB,MAAMC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACxCI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAEhDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAI,6BAA6B,CAAC;IAC9DD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAK,eAAe,CAAC;IAChDD,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAG,EAAE,CAAC;EACrC;EAEAC,OAAOA,CAACN,IAAS;IAEf,MAAMC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACxCI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAEhDG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAIL,IAAI,CAACO,KAAK,CAACC,QAAQ,EAAE,CAAC;IACtDJ,YAAY,CAACC,OAAO,CAAC,MAAM,EAAIL,IAAI,CAACS,IAAI,CAACD,QAAQ,EAAE,CAAC;IACpDJ,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEL,IAAI,CAACU,MAAM,KAAK,IAAI,GAAG,EAAE,GAAGV,IAAI,CAACU,MAAM,CAACF,QAAQ,EAAE,CAAC;EACpF;EAEAG,UAAUA,CAAA;IAERP,YAAY,CAACQ,UAAU,CAAC,gBAAgB,CAAC;IACzCR,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EAExC;EAAC,QAAAC,CAAA,G;qBA9BUhB,cAAc;EAAA;EAAA,QAAAiB,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEPpB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}