{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MacrosService {\n  constructor(http) {\n    this.http = http;\n    this.endpoint = 'http://localhost:3333/macros';\n  }\n  remove(params) {\n    return this.makeRequest('post', '/remove', params);\n  }\n  insert(params) {\n    return this.makeRequest('post', '/insert', params);\n  }\n  update(params) {\n    return this.makeRequest('put', '/update', params);\n  }\n  put(path, params) {\n    return this.makeRequest('put', path, new HttpParams({\n      fromObject: params\n    }));\n  }\n  makeRequest(httpMethod, endpoint, params) {\n    const fullUrl = `${this.endpoint.trim()}${endpoint}`;\n    return this.http[httpMethod](fullUrl, params instanceof HttpParams ? {\n      params\n    } : params).pipe(catchError(this.handleError));\n  }\n  transaction(params) {\n    return this.makeRequest('post', '/transaction', params);\n  }\n  execute(params) {\n    return this.makeRequest('post', '/execute', params);\n  }\n  getByPath(id) {\n    const param = {\n      id_path: id\n    };\n    return this.makeRequest('post', '/getByPath', param);\n  }\n  handleError(error) {\n    console.error('Ocorreu um erro:', error);\n    return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\n  }\n  static #_ = this.ɵfac = function MacrosService_Factory(t) {\n    return new (t || MacrosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MacrosService,\n    factory: MacrosService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { MacrosService };","map":{"version":3,"names":["HttpParams","throwError","catchError","MacrosService","constructor","http","endpoint","remove","params","makeRequest","insert","update","put","path","fromObject","httpMethod","fullUrl","trim","pipe","handleError","transaction","execute","getByPath","id","param","id_path","error","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\app\\modules\\auth\\api-authenticate\\macros\\macros.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class MacrosService {\r\n\r\n  private endpoint = 'http://localhost:3333/macros';\r\n\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  remove(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/remove', params);\r\n  }\r\n\r\n  insert(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/insert', params);\r\n  }\r\n\r\n  update(params: any): Observable<any> {\r\n    return this.makeRequest('put', '/update', params);\r\n  }\r\n\r\n  put(path: string, params: { [param: string]: string | number | boolean }): Observable<any> {\r\n    return this.makeRequest('put', path, new HttpParams({ fromObject: params }));\r\n  }\r\n\r\n  private makeRequest<T>(httpMethod: string, endpoint: string, params?: any): Observable<T> {\r\n    const fullUrl = `${this.endpoint.trim()}${endpoint}`;\r\n\r\n    return this.http[httpMethod](\r\n      fullUrl,\r\n      params instanceof HttpParams ? { params } : params\r\n    ).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  transaction(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/transaction', params);\r\n  }\r\n\r\n  execute(params: any): Observable<any> {\r\n    return this.makeRequest('post', '/execute', params);\r\n  }\r\n\r\n  getByPath(id: any): Observable<any> {\r\n\r\n    const param = {\r\n      id_path: id\r\n    }\r\n    return this.makeRequest('post', '/getByPath', param);\r\n  }\r\n\r\n  private handleError(error: any): Observable<never> {\r\n    console.error('Ocorreu um erro:', error);\r\n    return throwError('Erro na solicitação. Por favor, tente novamente mais tarde.');\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAC7D,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAE3C,MAIaC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,8BAA8B;EAEV;EAEvCC,MAAMA,CAACC,MAAW;IAChB,OAAO,IAAI,CAACC,WAAW,CAAC,MAAM,EAAE,SAAS,EAAED,MAAM,CAAC;EACpD;EAEAE,MAAMA,CAACF,MAAW;IAChB,OAAO,IAAI,CAACC,WAAW,CAAC,MAAM,EAAE,SAAS,EAAED,MAAM,CAAC;EACpD;EAEAG,MAAMA,CAACH,MAAW;IAChB,OAAO,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,SAAS,EAAED,MAAM,CAAC;EACnD;EAEAI,GAAGA,CAACC,IAAY,EAAEL,MAAsD;IACtE,OAAO,IAAI,CAACC,WAAW,CAAC,KAAK,EAAEI,IAAI,EAAE,IAAIb,UAAU,CAAC;MAAEc,UAAU,EAAEN;IAAM,CAAE,CAAC,CAAC;EAC9E;EAEQC,WAAWA,CAAIM,UAAkB,EAAET,QAAgB,EAAEE,MAAY;IACvE,MAAMQ,OAAO,GAAG,GAAG,IAAI,CAACV,QAAQ,CAACW,IAAI,EAAE,GAAGX,QAAQ,EAAE;IAEpD,OAAO,IAAI,CAACD,IAAI,CAACU,UAAU,CAAC,CAC1BC,OAAO,EACPR,MAAM,YAAYR,UAAU,GAAG;MAAEQ;IAAM,CAAE,GAAGA,MAAM,CACnD,CAACU,IAAI,CACJhB,UAAU,CAAC,IAAI,CAACiB,WAAW,CAAC,CAC7B;EACH;EAEAC,WAAWA,CAACZ,MAAW;IACrB,OAAO,IAAI,CAACC,WAAW,CAAC,MAAM,EAAE,cAAc,EAAED,MAAM,CAAC;EACzD;EAEAa,OAAOA,CAACb,MAAW;IACjB,OAAO,IAAI,CAACC,WAAW,CAAC,MAAM,EAAE,UAAU,EAAED,MAAM,CAAC;EACrD;EAEAc,SAASA,CAACC,EAAO;IAEf,MAAMC,KAAK,GAAG;MACZC,OAAO,EAAEF;KACV;IACD,OAAO,IAAI,CAACd,WAAW,CAAC,MAAM,EAAE,YAAY,EAAEe,KAAK,CAAC;EACtD;EAEQL,WAAWA,CAACO,KAAU;IAC5BC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,OAAOzB,UAAU,CAAC,6DAA6D,CAAC;EAClF;EAAC,QAAA2B,CAAA,G;qBApDUzB,aAAa,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb9B,aAAa;IAAA+B,OAAA,EAAb/B,aAAa,CAAAgC,IAAA;IAAAC,UAAA,EAHZ;EAAM;;SAGPjC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}