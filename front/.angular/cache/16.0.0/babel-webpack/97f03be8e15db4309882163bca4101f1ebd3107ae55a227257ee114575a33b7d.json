{"ast":null,"code":"import { finalize } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/services/loading/loading.service\";\nclass FuseLoadingInterceptor {\n  /**\n   * Constructor\n   */\n  constructor(_fuseLoadingService) {\n    this._fuseLoadingService = _fuseLoadingService;\n    // Subscribe to the auto\n    this._fuseLoadingService.auto$.subscribe(value => {\n      this.handleRequestsAutomatically = value;\n    });\n  }\n  /**\n   * Intercept\n   *\n   * @param req\n   * @param next\n   */\n  intercept(req, next) {\n    // If the Auto mode is turned off, do nothing\n    if (!this.handleRequestsAutomatically) {\n      return next.handle(req);\n    }\n    // Set the loading status to true\n    this._fuseLoadingService._setLoadingStatus(true, req.url);\n    return next.handle(req).pipe(finalize(() => {\n      // Set the status to false if there are any errors or the request is completed\n      this._fuseLoadingService._setLoadingStatus(false, req.url);\n    }));\n  }\n  static #_ = this.ɵfac = function FuseLoadingInterceptor_Factory(t) {\n    return new (t || FuseLoadingInterceptor)(i0.ɵɵinject(i1.FuseLoadingService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuseLoadingInterceptor,\n    factory: FuseLoadingInterceptor.ɵfac\n  });\n}\nexport { FuseLoadingInterceptor };","map":{"version":3,"names":["finalize","FuseLoadingInterceptor","constructor","_fuseLoadingService","auto$","subscribe","value","handleRequestsAutomatically","intercept","req","next","handle","_setLoadingStatus","url","pipe","_","i0","ɵɵinject","i1","FuseLoadingService","_2","factory","ɵfac"],"sources":["C:\\Users\\jcfaz\\Downloads\\Projects\\desafio-afiliado\\front\\src\\@fuse\\services\\loading\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { finalize, Observable } from 'rxjs';\r\nimport { FuseLoadingService } from '@fuse/services/loading/loading.service';\r\n\r\n@Injectable()\r\nexport class FuseLoadingInterceptor implements HttpInterceptor\r\n{\r\n    handleRequestsAutomatically: boolean;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _fuseLoadingService: FuseLoadingService\r\n    )\r\n    {\r\n        // Subscribe to the auto\r\n        this._fuseLoadingService.auto$\r\n            .subscribe((value) => {\r\n                this.handleRequestsAutomatically = value;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Intercept\r\n     *\r\n     * @param req\r\n     * @param next\r\n     */\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\r\n    {\r\n        // If the Auto mode is turned off, do nothing\r\n        if ( !this.handleRequestsAutomatically )\r\n        {\r\n            return next.handle(req);\r\n        }\r\n\r\n        // Set the loading status to true\r\n        this._fuseLoadingService._setLoadingStatus(true, req.url);\r\n\r\n        return next.handle(req).pipe(\r\n            finalize(() => {\r\n                // Set the status to false if there are any errors or the request is completed\r\n                this._fuseLoadingService._setLoadingStatus(false, req.url);\r\n            }));\r\n    }\r\n}\r\n"],"mappings":"AAEA,SAASA,QAAQ,QAAoB,MAAM;;;AAG3C,MACaC,sBAAsB;EAI/B;;;EAGAC,YACYC,mBAAuC;IAAvC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IAG3B;IACA,IAAI,CAACA,mBAAmB,CAACC,KAAK,CACzBC,SAAS,CAAEC,KAAK,IAAI;MACjB,IAAI,CAACC,2BAA2B,GAAGD,KAAK;IAC5C,CAAC,CAAC;EACV;EAEA;;;;;;EAMAE,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAE9C;IACA,IAAK,CAAC,IAAI,CAACH,2BAA2B,EACtC;MACI,OAAOG,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC;;IAG3B;IACA,IAAI,CAACN,mBAAmB,CAACS,iBAAiB,CAAC,IAAI,EAAEH,GAAG,CAACI,GAAG,CAAC;IAEzD,OAAOH,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CAACK,IAAI,CACxBd,QAAQ,CAAC,MAAK;MACV;MACA,IAAI,CAACG,mBAAmB,CAACS,iBAAiB,CAAC,KAAK,EAAEH,GAAG,CAACI,GAAG,CAAC;IAC9D,CAAC,CAAC,CAAC;EACX;EAAC,QAAAE,CAAA,G;qBAxCQd,sBAAsB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBnB,sBAAsB;IAAAoB,OAAA,EAAtBpB,sBAAsB,CAAAqB;EAAA;;SAAtBrB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}